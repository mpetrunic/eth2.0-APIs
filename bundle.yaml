openapi: 3.0.3
info:
  title: Eth2 Beacon Node API
  description: 'API specification for the beacon node, which enables users to query and participate in Ethereum 2.0 phase 0 beacon chain.'
  version: Dev - Eth2Spec v0.11.1
  contact:
    name: Ethereum Github
    url: 'https://github.com/ethereum/eth2.0-apis/issues'
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: '{server_url}'
    variables:
      server_url:
        description: Beacon node API url
        default: 'http://public-mainnet-node.ethereum.org/api'
tags:
  - name: Beacon
    description: Set of endpoints to query beacon chain.
  - name: Config
    description: 'Endpoints to query chain configuration, specification, and fork schedules.'
  - name: Node
    description: Endpoints to query node related informations
  - name: Validator
    description: Endpoints intended for validator clients
  - name: ValidatorRequiredApi
    description: The minimal set of endpoints to enable a working validator implementation.
paths:
  /v1/beacon/genesis:
    get:
      operationId: getGenesis
      tags:
        - Beacon
        - ValidatorRequiredApi
      summary: Retrieve details of the chain's genesis.
      description: Retrieve details of the chain's genesis which can be used to identify chain.
      responses:
        '200':
          description: Request successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      genesis_time:
                        allOf:
                          - type: string
                            example: '1'
                          - example: '1590832934'
                          - description: 'The genesis_time configured for the beacon node, which is the unix time in seconds at which the Eth2.0 chain began.'
                      genesis_validators_root:
                        type: string
                        format: hex
                        example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                        pattern: '^0x[a-fA-F0-9]{64}$'
                      genesis_fork_version:
                        type: string
                        description: a fork version number
                        example: '0x00000000'
                        pattern: '^0x[a-fA-F0-9]{8}$'
        '404':
          description: Chain genesis info is not yet known
        '500':
          description: Beacon node internal error.
  '/v1/beacon/states/{state_id}/root':
    get:
      operationId: getStateRoot
      summary: Get state SSZ HashTreeRoot
      description: 'Calculates HashTreeRoot for state with given ''stateId''. If stateId is root, same value will be returned.'
      tags:
        - Beacon
      parameters:
        - name: state_id
          in: path
          required: true
          example: head
          schema:
            type: string
          description: |
            State identifier.
            Can be one of: "head" (canonical head in node's view), "genesis", "finalized", "justified", \<slot\>, \<hex encoded stateRoot with 0x prefix\>.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      root:
                        allOf:
                          - description: HashTreeRoot of BeaconState object
                          - type: string
                            format: hex
                            example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                            pattern: '^0x[a-fA-F0-9]{64}$'
        '500':
          description: Beacon node internal error.
  '/v1/beacon/states/{state_id}/fork':
    get:
      operationId: getStateFork
      summary: Get Fork object for requested state
      description: 'Returns [Fork](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#fork) object for state with given ''stateId''.'
      tags:
        - Beacon
        - ValidatorRequiredApi
      parameters:
        - name: state_id
          in: path
          required: true
          example: head
          schema:
            type: string
          description: |
            State identifier.
            Can be one of: "head" (canonical head in node's view), "genesis", "finalized", "justified", \<slot\>, \<hex encoded stateRoot with 0x prefix\>.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    description: 'The [`Fork`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#fork) object from the Eth2.0 spec.'
                    properties:
                      previous_version:
                        type: string
                        description: a fork version number
                        example: '0x00000000'
                        pattern: '^0x[a-fA-F0-9]{8}$'
                      current_version:
                        type: string
                        description: a fork version number
                        example: '0x00000000'
                        pattern: '^0x[a-fA-F0-9]{8}$'
                      epoch:
                        type: string
                        example: '1'
        '500':
          description: Beacon node internal error.
  '/v1/beacon/states/{state_id}/finality_checkpoints':
    get:
      operationId: getStateFinalityCheckpoints
      summary: Get state finality checkpoints
      description: |
        Returns finality checkpoints for state with given 'stateId'.
        In case finality is not yet achieved, checkpoint should return epoch 0 and ZERO_HASH as root.
      tags:
        - Beacon
      parameters:
        - name: state_id
          in: path
          required: true
          example: head
          schema:
            type: string
          description: |
            State identifier.
            Can be one of: "head" (canonical head in node's view), "genesis", "finalized", "justified", \<slot\>, \<hex encoded stateRoot with 0x prefix\>.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      previous_justified:
                        type: object
                        description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                        properties:
                          epoch:
                            type: string
                            example: '1'
                          root:
                            type: string
                            format: hex
                            example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                            pattern: '^0x[a-fA-F0-9]{64}$'
                      current_justified:
                        type: object
                        description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                        properties:
                          epoch:
                            type: string
                            example: '1'
                          root:
                            type: string
                            format: hex
                            example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                            pattern: '^0x[a-fA-F0-9]{64}$'
                      finalized:
                        type: object
                        description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                        properties:
                          epoch:
                            type: string
                            example: '1'
                          root:
                            type: string
                            format: hex
                            example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                            pattern: '^0x[a-fA-F0-9]{64}$'
        '500':
          description: Beacon node internal error.
  '/v1/beacon/states/{state_id}/validators':
    get:
      operationId: getStateValidators
      summary: Get validators from state
      description: 'Returns filterable list of validators with their balance, status and index.'
      tags:
        - Beacon
      parameters:
        - name: state_id
          in: path
          required: true
          example: head
          schema:
            type: string
          description: |
            State identifier.
            Can be one of: "head" (canonical head in node's view), "genesis", "finalized", "justified", \<slot\>, \<hex encoded stateRoot with 0x prefix\>.
        - name: id
          description: Either hex encoded public key (with 0x prefix) or validator index
          in: query
          required: false
          schema:
            type: array
            maxItems: 30
            uniqueItems: true
            items:
              description: Either hex encoded public key (with 0x prefix) or validator index
              type: string
        - name: status
          description: '[Validator status specification](https://hackmd.io/ofFJ5gOmQpu1jjHilHbdQQ)'
          in: query
          required: false
          schema:
            type: array
            uniqueItems: true
            items:
              allOf:
                - description: |
                    Possible statuses:
                    - **pending_initialized** - When the first deposit is processed, but not enough funds are available (or not yet the end of the first epoch) to get validator into the activation queue.
                    - **pending_queued** - When validator is waiting to get activated, and have enough funds etc. while in the queue, validator activation epoch keeps changing until it gets to the front and make it through (finalization is a requirement here too).
                    - **active_ongoing** - When validator must be attesting, and have not initiated any exit.
                    - **active_exiting** - When validator is still active, but filed a voluntary request to exit.
                    - **active_slashed** - When validator is still active, but have a slashed status and is scheduled to exit.
                    - **exited_unslashed** - When validator has reached reguler exit epoch, not being slashed, and doesn't have to attest any more, but cannot withdraw yet.
                    - **exited_slashed** - When validator has reached reguler exit epoch, but was slashed, have to wait for a longer withdrawal period.
                    - **withdrawal_possible** - After validator has exited, a while later is permitted to move funds, and is truly out of the system.
                    - **withdrawal_done** - (not possible in phase0, except slashing full balance) - actually having moved funds away

                    [Validator status specification](https://hackmd.io/ofFJ5gOmQpu1jjHilHbdQQ)
                  enum:
                    - pending_initialized
                    - pending_queued
                    - active_ongoing
                    - active_exiting
                    - active_slashed
                    - exited_unslashed
                    - exited_slashed
                    - withdrawal_possible
                    - withdrawal_done
                  example: active_ongoing
                - enum:
                    - active
                    - pending
                    - exited
                    - withdrawal
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        index:
                          allOf:
                            - type: string
                              example: '1'
                            - description: Index of validator in validator registry.
                        balance:
                          allOf:
                            - type: string
                              example: '1'
                            - description: Current validator balance in gwei.
                        status:
                          description: |
                            Possible statuses:
                            - **pending_initialized** - When the first deposit is processed, but not enough funds are available (or not yet the end of the first epoch) to get validator into the activation queue.
                            - **pending_queued** - When validator is waiting to get activated, and have enough funds etc. while in the queue, validator activation epoch keeps changing until it gets to the front and make it through (finalization is a requirement here too).
                            - **active_ongoing** - When validator must be attesting, and have not initiated any exit.
                            - **active_exiting** - When validator is still active, but filed a voluntary request to exit.
                            - **active_slashed** - When validator is still active, but have a slashed status and is scheduled to exit.
                            - **exited_unslashed** - When validator has reached reguler exit epoch, not being slashed, and doesn't have to attest any more, but cannot withdraw yet.
                            - **exited_slashed** - When validator has reached reguler exit epoch, but was slashed, have to wait for a longer withdrawal period.
                            - **withdrawal_possible** - After validator has exited, a while later is permitted to move funds, and is truly out of the system.
                            - **withdrawal_done** - (not possible in phase0, except slashing full balance) - actually having moved funds away

                            [Validator status specification](https://hackmd.io/ofFJ5gOmQpu1jjHilHbdQQ)
                          enum:
                            - pending_initialized
                            - pending_queued
                            - active_ongoing
                            - active_exiting
                            - active_slashed
                            - exited_unslashed
                            - exited_slashed
                            - withdrawal_possible
                            - withdrawal_done
                          example: active_ongoing
                        validator:
                          type: object
                          properties:
                            pubkey:
                              type: string
                              pattern: '^0x[a-fA-F0-9]{96}$'
                              description: 'The validator''s BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._'
                              example: '0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a'
                            withdrawal_credentials:
                              allOf:
                                - type: string
                                  format: hex
                                  example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                  pattern: '^0x[a-fA-F0-9]{64}$'
                                - description: Root of withdrawal credentials
                            effective_balance:
                              allOf:
                                - type: string
                                  example: '1'
                                - description: Balance at stake in Gwei.
                            slashed:
                              type: boolean
                              example: false
                              description: Was validator slashed (not longer active).
                            activation_eligibility_epoch:
                              allOf:
                                - type: string
                                  example: '1'
                                - description: When criteria for activation were met.
                            activation_epoch:
                              allOf:
                                - type: string
                                  example: '1'
                                - description: Epoch when validator activated. 'FAR_FUTURE_EPOCH' if not activated
                            exit_epoch:
                              allOf:
                                - type: string
                                  example: '1'
                                - description: Epoch when validator exited. 'FAR_FUTURE_EPOCH' if not exited.
                            withdrawable_epoch:
                              allOf:
                                - type: string
                                  example: '1'
                                - description: When validator can withdraw or transfer funds. 'FAR_FUTURE_EPOCH' if not defined
        '500':
          description: Beacon node internal error.
  '/v1/beacon/states/{state_id}/validators/{validator_id}':
    get:
      operationId: getStateValidator
      summary: Get validator from state by id
      description: Returns validator specified by state and id or public key along with status and balance.
      tags:
        - Beacon
        - ValidatorRequiredApi
      parameters:
        - name: state_id
          in: path
          required: true
          example: head
          schema:
            type: string
          description: |
            State identifier.
            Can be one of: "head" (canonical head in node's view), "genesis", "finalized", "justified", \<slot\>, \<hex encoded stateRoot with 0x prefix\>.
        - name: validator_id
          description: Either hex encoded public key (with 0x prefix) or validator index
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      index:
                        allOf:
                          - type: string
                            example: '1'
                          - description: Index of validator in validator registry.
                      balance:
                        allOf:
                          - type: string
                            example: '1'
                          - description: Current validator balance in gwei.
                      status:
                        description: |
                          Possible statuses:
                          - **pending_initialized** - When the first deposit is processed, but not enough funds are available (or not yet the end of the first epoch) to get validator into the activation queue.
                          - **pending_queued** - When validator is waiting to get activated, and have enough funds etc. while in the queue, validator activation epoch keeps changing until it gets to the front and make it through (finalization is a requirement here too).
                          - **active_ongoing** - When validator must be attesting, and have not initiated any exit.
                          - **active_exiting** - When validator is still active, but filed a voluntary request to exit.
                          - **active_slashed** - When validator is still active, but have a slashed status and is scheduled to exit.
                          - **exited_unslashed** - When validator has reached reguler exit epoch, not being slashed, and doesn't have to attest any more, but cannot withdraw yet.
                          - **exited_slashed** - When validator has reached reguler exit epoch, but was slashed, have to wait for a longer withdrawal period.
                          - **withdrawal_possible** - After validator has exited, a while later is permitted to move funds, and is truly out of the system.
                          - **withdrawal_done** - (not possible in phase0, except slashing full balance) - actually having moved funds away

                          [Validator status specification](https://hackmd.io/ofFJ5gOmQpu1jjHilHbdQQ)
                        enum:
                          - pending_initialized
                          - pending_queued
                          - active_ongoing
                          - active_exiting
                          - active_slashed
                          - exited_unslashed
                          - exited_slashed
                          - withdrawal_possible
                          - withdrawal_done
                        example: active_ongoing
                      validator:
                        type: object
                        properties:
                          pubkey:
                            type: string
                            pattern: '^0x[a-fA-F0-9]{96}$'
                            description: 'The validator''s BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._'
                            example: '0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a'
                          withdrawal_credentials:
                            allOf:
                              - type: string
                                format: hex
                                example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                pattern: '^0x[a-fA-F0-9]{64}$'
                              - description: Root of withdrawal credentials
                          effective_balance:
                            allOf:
                              - type: string
                                example: '1'
                              - description: Balance at stake in Gwei.
                          slashed:
                            type: boolean
                            example: false
                            description: Was validator slashed (not longer active).
                          activation_eligibility_epoch:
                            allOf:
                              - type: string
                                example: '1'
                              - description: When criteria for activation were met.
                          activation_epoch:
                            allOf:
                              - type: string
                                example: '1'
                              - description: Epoch when validator activated. 'FAR_FUTURE_EPOCH' if not activated
                          exit_epoch:
                            allOf:
                              - type: string
                                example: '1'
                              - description: Epoch when validator exited. 'FAR_FUTURE_EPOCH' if not exited.
                          withdrawable_epoch:
                            allOf:
                              - type: string
                                example: '1'
                              - description: When validator can withdraw or transfer funds. 'FAR_FUTURE_EPOCH' if not defined
        '404':
          description: Validator doesn't exist.
        '500':
          description: Beacon node internal error.
  '/v1/beacon/states/{state_id}/committees/{epoch}':
    get:
      operationId: getEpochCommittees
      summary: Get all committees for epoch
      description: Retrieves the committees for the given state at the given epoch.
      tags:
        - Beacon
      parameters:
        - name: state_id
          in: path
          required: true
          example: head
          schema:
            type: string
          description: |
            State identifier.
            Can be one of: "head" (canonical head in node's view), "genesis", "finalized", "justified", \<slot\>, \<hex encoded stateRoot with 0x prefix\>.
        - name: epoch
          description: Epoch for which to calculate committees. Defaults to beacon state epoch.
          in: path
          required: true
          allowEmptyValue: true
          schema:
            allOf:
              - type: string
                example: '1'
              - example: ''
        - name: index
          description: Committee index
          in: query
          required: false
          schema:
            allOf:
              - type: string
                example: '1'
              - example: ''
        - name: slot
          in: query
          required: false
          schema:
            allOf:
              - type: string
                example: '1'
              - example: ''
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      description: Group of validators assigned to attest at specific slot and that have the same committee index (shard in phase 1)
                      type: object
                      properties:
                        index:
                          allOf:
                            - type: string
                              example: '1'
                            - description: Committee index at a slot
                        slot:
                          type: string
                          example: '1'
                        validators:
                          type: array
                          description: List of validator indices assigned to this committee
                          items:
                            type: string
                            example: '1'
        '400':
          description: If slot doesn't belong in given epoch.
        '500':
          description: Beacon node internal error.
  /v1/beacon/headers:
    get:
      operationId: getBlockHeaders
      summary: Get block headers
      description: Retrieves block headers matching given query. By default it will fetch current head slot blocks.
      tags:
        - Beacon
      parameters:
        - name: slot
          in: query
          required: false
          schema:
            allOf:
              - type: string
                example: '1'
              - example: ''
        - name: parent_root
          in: query
          required: false
          schema:
            allOf:
              - type: string
                format: hex
                example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                pattern: '^0x[a-fA-F0-9]{64}$'
              - example: ''
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        root:
                          type: string
                          format: hex
                          example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                          pattern: '^0x[a-fA-F0-9]{64}$'
                        canonical:
                          type: boolean
                        header:
                          type: object
                          description: 'The [`SignedBeaconBlockHeader`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the Eth2.0 spec.'
                          properties:
                            message:
                              description: 'The [`BeaconBlockHeader`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the Eth2.0 spec.'
                              allOf:
                                - type: object
                                  properties:
                                    slot:
                                      allOf:
                                        - type: string
                                          example: '1'
                                        - description: The slot to which this block corresponds.
                                    proposer_index:
                                      allOf:
                                        - type: string
                                          example: '1'
                                        - description: Index of validator in validator registry.
                                    parent_root:
                                      allOf:
                                        - type: string
                                          format: hex
                                          example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                          pattern: '^0x[a-fA-F0-9]{64}$'
                                        - description: The signing merkle root of the parent `BeaconBlock`.
                                    state_root:
                                      allOf:
                                        - type: string
                                          format: hex
                                          example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                          pattern: '^0x[a-fA-F0-9]{64}$'
                                        - description: The tree hash merkle root of the `BeaconState` for the `BeaconBlock`.
                                - type: object
                                  properties:
                                    body_root:
                                      allOf:
                                        - type: string
                                          format: hex
                                          example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                          pattern: '^0x[a-fA-F0-9]{64}$'
                                        - description: The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`
                            signature:
                              type: string
                              format: bytes
                              pattern: '^0x[a-fA-F0-9]{192}$'
                              example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
        '500':
          description: Beacon node internal error.
  '/v1/beacon/headers/{block_id}':
    get:
      operationId: getBlockHeader
      summary: Get block header
      description: Retrieves block header for given block id.
      tags:
        - Beacon
      parameters:
        - name: block_id
          in: path
          required: true
          example: head
          schema:
            type: string
          description: |
            Block identifier.
            Can be one of: "head" (canonical head in node's view), "genesis", "finalized", \<slot\>, \<hex encoded blockRoot with 0x prefix\>.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      canonical:
                        type: boolean
                      header:
                        type: object
                        description: 'The [`SignedBeaconBlockHeader`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the Eth2.0 spec.'
                        properties:
                          message:
                            description: 'The [`BeaconBlockHeader`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the Eth2.0 spec.'
                            allOf:
                              - type: object
                                properties:
                                  slot:
                                    allOf:
                                      - type: string
                                        example: '1'
                                      - description: The slot to which this block corresponds.
                                  proposer_index:
                                    allOf:
                                      - type: string
                                        example: '1'
                                      - description: Index of validator in validator registry.
                                  parent_root:
                                    allOf:
                                      - type: string
                                        format: hex
                                        example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                        pattern: '^0x[a-fA-F0-9]{64}$'
                                      - description: The signing merkle root of the parent `BeaconBlock`.
                                  state_root:
                                    allOf:
                                      - type: string
                                        format: hex
                                        example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                        pattern: '^0x[a-fA-F0-9]{64}$'
                                      - description: The tree hash merkle root of the `BeaconState` for the `BeaconBlock`.
                              - type: object
                                properties:
                                  body_root:
                                    allOf:
                                      - type: string
                                        format: hex
                                        example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                        pattern: '^0x[a-fA-F0-9]{64}$'
                                      - description: The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`
                          signature:
                            type: string
                            format: bytes
                            pattern: '^0x[a-fA-F0-9]{192}$'
                            example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
        '404':
          description: Block not found!
        '500':
          description: Beacon node internal error.
  '/v1/beacon/blocks/{block_id}':
    get:
      operationId: getBlock
      summary: Get block
      description: Retrieves block details for given block id.
      tags:
        - Beacon
      parameters:
        - name: block_id
          in: path
          required: true
          example: head
          schema:
            type: string
          description: |
            Block identifier.
            Can be one of: "head" (canonical head in node's view), "genesis", "finalized", \<slot\>, \<hex encoded blockRoot with 0x prefix\>.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    description: 'The [`SignedBeaconBlock`](https://github.com/ethereum/eth2.0-specs/blob/v0.10.1/specs/phase0/beacon-chain.md#signedbeaconblock) object envelope from the Eth2.0 spec.'
                    properties:
                      message:
                        description: 'The [`BeaconBlock`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#beaconblock) object from the Eth2.0 spec.'
                        allOf:
                          - type: object
                            properties:
                              slot:
                                allOf:
                                  - type: string
                                    example: '1'
                                  - description: The slot to which this block corresponds.
                              proposer_index:
                                allOf:
                                  - type: string
                                    example: '1'
                                  - description: Index of validator in validator registry.
                              parent_root:
                                allOf:
                                  - type: string
                                    format: hex
                                    example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                    pattern: '^0x[a-fA-F0-9]{64}$'
                                  - description: The signing merkle root of the parent `BeaconBlock`.
                              state_root:
                                allOf:
                                  - type: string
                                    format: hex
                                    example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                    pattern: '^0x[a-fA-F0-9]{64}$'
                                  - description: The tree hash merkle root of the `BeaconState` for the `BeaconBlock`.
                          - type: object
                            properties:
                              body:
                                type: object
                                description: 'The [`BeaconBlockBody`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#beaconblockbody) object from the Eth2.0 spec.'
                                properties:
                                  randao_reveal:
                                    allOf:
                                      - type: string
                                        format: bytes
                                        pattern: '^0x[a-fA-F0-9]{192}$'
                                        example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                                      - description: The RanDAO reveal value provided by the validator.
                                  eth1_data:
                                    type: object
                                    description: 'The [`Eth1Data`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#eth1data) object from the Eth2.0 spec.'
                                    properties:
                                      deposit_root:
                                        allOf:
                                          - type: string
                                            format: hex
                                            example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                            pattern: '^0x[a-fA-F0-9]{64}$'
                                          - description: Root of the deposit tree.
                                      deposit_count:
                                        allOf:
                                          - type: string
                                            example: '1'
                                          - description: Total number of deposits.
                                      block_hash:
                                        allOf:
                                          - type: string
                                            format: hex
                                            example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                            pattern: '^0x[a-fA-F0-9]{64}$'
                                          - description: Ethereum 1.x block hash.
                                  graffiti:
                                    type: string
                                    format: byte
                                    pattern: '^0x[a-fA-F0-9]{64}$'
                                  proposer_slashings:
                                    type: array
                                    items:
                                      type: object
                                      description: 'The [`ProposerSlashing`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#proposerslashing) object from the Eth2.0 spec.'
                                      properties:
                                        signed_header_1:
                                          type: object
                                          description: 'The [`SignedBeaconBlockHeader`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the Eth2.0 spec.'
                                          properties:
                                            message:
                                              description: 'The [`BeaconBlockHeader`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the Eth2.0 spec.'
                                              allOf:
                                                - type: object
                                                  properties:
                                                    slot:
                                                      allOf:
                                                        - type: string
                                                          example: '1'
                                                        - description: The slot to which this block corresponds.
                                                    proposer_index:
                                                      allOf:
                                                        - type: string
                                                          example: '1'
                                                        - description: Index of validator in validator registry.
                                                    parent_root:
                                                      allOf:
                                                        - type: string
                                                          format: hex
                                                          example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                                          pattern: '^0x[a-fA-F0-9]{64}$'
                                                        - description: The signing merkle root of the parent `BeaconBlock`.
                                                    state_root:
                                                      allOf:
                                                        - type: string
                                                          format: hex
                                                          example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                                          pattern: '^0x[a-fA-F0-9]{64}$'
                                                        - description: The tree hash merkle root of the `BeaconState` for the `BeaconBlock`.
                                                - type: object
                                                  properties:
                                                    body_root:
                                                      allOf:
                                                        - type: string
                                                          format: hex
                                                          example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                                          pattern: '^0x[a-fA-F0-9]{64}$'
                                                        - description: The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`
                                            signature:
                                              type: string
                                              format: bytes
                                              pattern: '^0x[a-fA-F0-9]{192}$'
                                              example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                                        signed_header_2:
                                          type: object
                                          description: 'The [`SignedBeaconBlockHeader`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the Eth2.0 spec.'
                                          properties:
                                            message:
                                              description: 'The [`BeaconBlockHeader`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the Eth2.0 spec.'
                                              allOf:
                                                - type: object
                                                  properties:
                                                    slot:
                                                      allOf:
                                                        - type: string
                                                          example: '1'
                                                        - description: The slot to which this block corresponds.
                                                    proposer_index:
                                                      allOf:
                                                        - type: string
                                                          example: '1'
                                                        - description: Index of validator in validator registry.
                                                    parent_root:
                                                      allOf:
                                                        - type: string
                                                          format: hex
                                                          example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                                          pattern: '^0x[a-fA-F0-9]{64}$'
                                                        - description: The signing merkle root of the parent `BeaconBlock`.
                                                    state_root:
                                                      allOf:
                                                        - type: string
                                                          format: hex
                                                          example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                                          pattern: '^0x[a-fA-F0-9]{64}$'
                                                        - description: The tree hash merkle root of the `BeaconState` for the `BeaconBlock`.
                                                - type: object
                                                  properties:
                                                    body_root:
                                                      allOf:
                                                        - type: string
                                                          format: hex
                                                          example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                                          pattern: '^0x[a-fA-F0-9]{64}$'
                                                        - description: The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`
                                            signature:
                                              type: string
                                              format: bytes
                                              pattern: '^0x[a-fA-F0-9]{192}$'
                                              example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                                  attester_slashings:
                                    type: array
                                    items:
                                      type: object
                                      description: 'The [`AttesterSlashing`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/core/0_beacon-chain.md#attesterslashing) object from the Eth2.0 spec.'
                                      properties:
                                        attestation_1:
                                          type: object
                                          description: 'The [`IndexedAttestation`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#indexedattestation) object from the Eth2.0 spec.'
                                          properties:
                                            attesting_indices:
                                              type: array
                                              maxItems: 2048
                                              description: Attesting validator indices
                                              items:
                                                type: string
                                                example: '1'
                                            signature:
                                              allOf:
                                                - type: string
                                                  format: bytes
                                                  pattern: '^0x[a-fA-F0-9]{192}$'
                                                  example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                                                - description: 'The BLS signature of the `IndexedAttestation`, created by the validator of the attestation.'
                                            data:
                                              type: object
                                              description: 'The [`AttestationData`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#attestationdata) object from the Eth2.0 spec.'
                                              properties:
                                                slot:
                                                  type: string
                                                  example: '1'
                                                index:
                                                  type: string
                                                  example: '1'
                                                beacon_block_root:
                                                  allOf:
                                                    - type: string
                                                      format: hex
                                                      example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                                      pattern: '^0x[a-fA-F0-9]{64}$'
                                                    - description: LMD GHOST vote.
                                                source:
                                                  type: object
                                                  description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                                                  properties:
                                                    epoch:
                                                      type: string
                                                      example: '1'
                                                    root:
                                                      type: string
                                                      format: hex
                                                      example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                                      pattern: '^0x[a-fA-F0-9]{64}$'
                                                target:
                                                  type: object
                                                  description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                                                  properties:
                                                    epoch:
                                                      type: string
                                                      example: '1'
                                                    root:
                                                      type: string
                                                      format: hex
                                                      example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                                      pattern: '^0x[a-fA-F0-9]{64}$'
                                        attestation_2:
                                          type: object
                                          description: 'The [`IndexedAttestation`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#indexedattestation) object from the Eth2.0 spec.'
                                          properties:
                                            attesting_indices:
                                              type: array
                                              maxItems: 2048
                                              description: Attesting validator indices
                                              items:
                                                type: string
                                                example: '1'
                                            signature:
                                              allOf:
                                                - type: string
                                                  format: bytes
                                                  pattern: '^0x[a-fA-F0-9]{192}$'
                                                  example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                                                - description: 'The BLS signature of the `IndexedAttestation`, created by the validator of the attestation.'
                                            data:
                                              type: object
                                              description: 'The [`AttestationData`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#attestationdata) object from the Eth2.0 spec.'
                                              properties:
                                                slot:
                                                  type: string
                                                  example: '1'
                                                index:
                                                  type: string
                                                  example: '1'
                                                beacon_block_root:
                                                  allOf:
                                                    - type: string
                                                      format: hex
                                                      example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                                      pattern: '^0x[a-fA-F0-9]{64}$'
                                                    - description: LMD GHOST vote.
                                                source:
                                                  type: object
                                                  description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                                                  properties:
                                                    epoch:
                                                      type: string
                                                      example: '1'
                                                    root:
                                                      type: string
                                                      format: hex
                                                      example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                                      pattern: '^0x[a-fA-F0-9]{64}$'
                                                target:
                                                  type: object
                                                  description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                                                  properties:
                                                    epoch:
                                                      type: string
                                                      example: '1'
                                                    root:
                                                      type: string
                                                      format: hex
                                                      example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                                      pattern: '^0x[a-fA-F0-9]{64}$'
                                  attestations:
                                    type: array
                                    items:
                                      type: object
                                      description: 'The [`Attestation`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#attestation) object from the Eth2.0 spec.'
                                      properties:
                                        aggregation_bits:
                                          type: string
                                          format: byte
                                          pattern: '^0x[a-fA-F0-9]+$'
                                          description: Attester aggregation bits.
                                        signature:
                                          allOf:
                                            - type: string
                                              format: bytes
                                              pattern: '^0x[a-fA-F0-9]{192}$'
                                              example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                                            - description: BLS aggregate signature.
                                        data:
                                          type: object
                                          description: 'The [`AttestationData`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#attestationdata) object from the Eth2.0 spec.'
                                          properties:
                                            slot:
                                              type: string
                                              example: '1'
                                            index:
                                              type: string
                                              example: '1'
                                            beacon_block_root:
                                              allOf:
                                                - type: string
                                                  format: hex
                                                  example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                                  pattern: '^0x[a-fA-F0-9]{64}$'
                                                - description: LMD GHOST vote.
                                            source:
                                              type: object
                                              description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                                              properties:
                                                epoch:
                                                  type: string
                                                  example: '1'
                                                root:
                                                  type: string
                                                  format: hex
                                                  example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                                  pattern: '^0x[a-fA-F0-9]{64}$'
                                            target:
                                              type: object
                                              description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                                              properties:
                                                epoch:
                                                  type: string
                                                  example: '1'
                                                root:
                                                  type: string
                                                  format: hex
                                                  example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                                  pattern: '^0x[a-fA-F0-9]{64}$'
                                  deposits:
                                    type: array
                                    items:
                                      type: object
                                      description: 'The [`Deposit`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#deposit) object from the Eth2.0 spec.'
                                      properties:
                                        proof:
                                          type: array
                                          description: Branch in the deposit tree.
                                          items:
                                            allOf:
                                              - type: string
                                                format: hex
                                                example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                                pattern: '^0x[a-fA-F0-9]{64}$'
                                          minItems: 32
                                          maxItems: 32
                                        data:
                                          type: object
                                          description: 'The [`DepositData`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#depositdata) object from the Eth2.0 spec.'
                                          properties:
                                            pubkey:
                                              type: string
                                              pattern: '^0x[a-fA-F0-9]{96}$'
                                              description: 'The validator''s BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._'
                                              example: '0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a'
                                            withdrawal_credentials:
                                              allOf:
                                                - type: string
                                                  format: hex
                                                  example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                                  pattern: '^0x[a-fA-F0-9]{64}$'
                                                - description: The withdrawal credentials.
                                            amount:
                                              allOf:
                                                - type: string
                                                  example: '1'
                                                - description: Amount in Gwei.
                                            signature:
                                              allOf:
                                                - type: string
                                                  format: bytes
                                                  pattern: '^0x[a-fA-F0-9]{192}$'
                                                  example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                                                - description: Container self-signature.
                                  voluntary_exits:
                                    type: array
                                    items:
                                      type: object
                                      description: 'The [`VoluntaryExit`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#voluntaryexit) object from the Eth2.0 spec.'
                                      properties:
                                        epoch:
                                          allOf:
                                            - type: string
                                              example: '1'
                                            - description: Minimum epoch for processing exit.
                                        validator_index:
                                          allOf:
                                            - type: string
                                              example: '1'
                                            - description: Index of the exiting validator.
                      signature:
                        type: string
                        format: bytes
                        pattern: '^0x[a-fA-F0-9]{192}$'
                        example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
        '404':
          description: Block not found!
        '500':
          description: Beacon node internal error.
  '/v1/beacon/blocks/{block_id}/root':
    get:
      operationId: getBlockRoot
      summary: Get block root
      description: Retrieves hashTreeRoot of BeaconBlock/BeaconBlockHeader
      tags:
        - Beacon
      parameters:
        - name: block_id
          in: path
          required: true
          example: head
          schema:
            type: string
          description: |
            Block identifier.
            Can be one of: "head" (canonical head in node's view), "genesis", "finalized", \<slot\>, \<hex encoded blockRoot with 0x prefix\>.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      root:
                        allOf:
                          - description: HashTreeRoot of BeaconBlock/BeaconBlockHeader object
                          - type: string
                            format: hex
                            example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                            pattern: '^0x[a-fA-F0-9]{64}$'
        '404':
          description: Block not found!
        '500':
          description: Beacon node internal error.
  '/v1/beacon/blocks/{block_id}/attestations':
    get:
      operationId: getBlockAttestations
      summary: Get block attestations
      description: Retrieves attestation included in requested block.
      tags:
        - Beacon
      parameters:
        - name: block_id
          in: path
          required: true
          example: head
          schema:
            type: string
          description: |
            Block identifier.
            Can be one of: "head" (canonical head in node's view), "genesis", "finalized", \<slot\>, \<hex encoded blockRoot with 0x prefix\>.
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      description: 'The [`Attestation`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#attestation) object from the Eth2.0 spec.'
                      properties:
                        aggregation_bits:
                          type: string
                          format: byte
                          pattern: '^0x[a-fA-F0-9]+$'
                          description: Attester aggregation bits.
                        signature:
                          allOf:
                            - type: string
                              format: bytes
                              pattern: '^0x[a-fA-F0-9]{192}$'
                              example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                            - description: BLS aggregate signature.
                        data:
                          type: object
                          description: 'The [`AttestationData`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#attestationdata) object from the Eth2.0 spec.'
                          properties:
                            slot:
                              type: string
                              example: '1'
                            index:
                              type: string
                              example: '1'
                            beacon_block_root:
                              allOf:
                                - type: string
                                  format: hex
                                  example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                  pattern: '^0x[a-fA-F0-9]{64}$'
                                - description: LMD GHOST vote.
                            source:
                              type: object
                              description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                              properties:
                                epoch:
                                  type: string
                                  example: '1'
                                root:
                                  type: string
                                  format: hex
                                  example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                  pattern: '^0x[a-fA-F0-9]{64}$'
                            target:
                              type: object
                              description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                              properties:
                                epoch:
                                  type: string
                                  example: '1'
                                root:
                                  type: string
                                  format: hex
                                  example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                  pattern: '^0x[a-fA-F0-9]{64}$'
        '500':
          description: Beacon node internal error.
  /v1/beacon/pool/attestations:
    get:
      operationId: getPoolAttestations
      summary: Get Attestations from operations pool
      description: Retrieves attestations known by the node but not necessarily incorporated into any block
      parameters:
        - name: slot
          in: query
          required: false
          schema:
            type: string
            example: '1'
        - name: committee_index
          in: query
          required: false
          schema:
            type: string
            example: '1'
      tags:
        - Beacon
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      description: 'The [`Attestation`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#attestation) object from the Eth2.0 spec.'
                      properties:
                        aggregation_bits:
                          type: string
                          format: byte
                          pattern: '^0x[a-fA-F0-9]+$'
                          description: Attester aggregation bits.
                        signature:
                          allOf:
                            - type: string
                              format: bytes
                              pattern: '^0x[a-fA-F0-9]{192}$'
                              example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                            - description: BLS aggregate signature.
                        data:
                          type: object
                          description: 'The [`AttestationData`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#attestationdata) object from the Eth2.0 spec.'
                          properties:
                            slot:
                              type: string
                              example: '1'
                            index:
                              type: string
                              example: '1'
                            beacon_block_root:
                              allOf:
                                - type: string
                                  format: hex
                                  example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                  pattern: '^0x[a-fA-F0-9]{64}$'
                                - description: LMD GHOST vote.
                            source:
                              type: object
                              description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                              properties:
                                epoch:
                                  type: string
                                  example: '1'
                                root:
                                  type: string
                                  format: hex
                                  example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                  pattern: '^0x[a-fA-F0-9]{64}$'
                            target:
                              type: object
                              description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                              properties:
                                epoch:
                                  type: string
                                  example: '1'
                                root:
                                  type: string
                                  format: hex
                                  example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                  pattern: '^0x[a-fA-F0-9]{64}$'
        '500':
          description: Beacon node internal error.
    post:
      operationId: submitPoolAttestations
      summary: Submit Attestation object to node
      description: 'Submits Attestation object to node. If attestation passes all validation constraints, node MUST publish attestation on appropriate subnet.'
      tags:
        - Beacon
        - ValidatorRequiredApi
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: 'The [`Attestation`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#attestation) object from the Eth2.0 spec.'
              properties:
                aggregation_bits:
                  type: string
                  format: byte
                  pattern: '^0x[a-fA-F0-9]+$'
                  description: Attester aggregation bits.
                signature:
                  allOf:
                    - type: string
                      format: bytes
                      pattern: '^0x[a-fA-F0-9]{192}$'
                      example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                    - description: BLS aggregate signature.
                data:
                  type: object
                  description: 'The [`AttestationData`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#attestationdata) object from the Eth2.0 spec.'
                  properties:
                    slot:
                      type: string
                      example: '1'
                    index:
                      type: string
                      example: '1'
                    beacon_block_root:
                      allOf:
                        - type: string
                          format: hex
                          example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                          pattern: '^0x[a-fA-F0-9]{64}$'
                        - description: LMD GHOST vote.
                    source:
                      type: object
                      description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                      properties:
                        epoch:
                          type: string
                          example: '1'
                        root:
                          type: string
                          format: hex
                          example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                          pattern: '^0x[a-fA-F0-9]{64}$'
                    target:
                      type: object
                      description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                      properties:
                        epoch:
                          type: string
                          example: '1'
                        root:
                          type: string
                          format: hex
                          example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                          pattern: '^0x[a-fA-F0-9]{64}$'
      responses:
        '200':
          description: Attestation is stored in pool and broadcast on appropriate subnet
        '400':
          description: 'Invalid attestation, it will never pass validation so it''s rejected'
        '500':
          description: Beacon node internal error.
  /v1/beacon/pool/atttester_slashings:
    get:
      operationId: getPoolAttesterSlashings
      summary: Get AttesterSlashings from operations pool
      description: Retrieves attester slashings known by the node but not necessarily incorporated into any block
      tags:
        - Beacon
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      description: 'The [`AttesterSlashing`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/core/0_beacon-chain.md#attesterslashing) object from the Eth2.0 spec.'
                      properties:
                        attestation_1:
                          type: object
                          description: 'The [`IndexedAttestation`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#indexedattestation) object from the Eth2.0 spec.'
                          properties:
                            attesting_indices:
                              type: array
                              maxItems: 2048
                              description: Attesting validator indices
                              items:
                                type: string
                                example: '1'
                            signature:
                              allOf:
                                - type: string
                                  format: bytes
                                  pattern: '^0x[a-fA-F0-9]{192}$'
                                  example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                                - description: 'The BLS signature of the `IndexedAttestation`, created by the validator of the attestation.'
                            data:
                              type: object
                              description: 'The [`AttestationData`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#attestationdata) object from the Eth2.0 spec.'
                              properties:
                                slot:
                                  type: string
                                  example: '1'
                                index:
                                  type: string
                                  example: '1'
                                beacon_block_root:
                                  allOf:
                                    - type: string
                                      format: hex
                                      example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                      pattern: '^0x[a-fA-F0-9]{64}$'
                                    - description: LMD GHOST vote.
                                source:
                                  type: object
                                  description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                                  properties:
                                    epoch:
                                      type: string
                                      example: '1'
                                    root:
                                      type: string
                                      format: hex
                                      example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                      pattern: '^0x[a-fA-F0-9]{64}$'
                                target:
                                  type: object
                                  description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                                  properties:
                                    epoch:
                                      type: string
                                      example: '1'
                                    root:
                                      type: string
                                      format: hex
                                      example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                      pattern: '^0x[a-fA-F0-9]{64}$'
                        attestation_2:
                          type: object
                          description: 'The [`IndexedAttestation`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#indexedattestation) object from the Eth2.0 spec.'
                          properties:
                            attesting_indices:
                              type: array
                              maxItems: 2048
                              description: Attesting validator indices
                              items:
                                type: string
                                example: '1'
                            signature:
                              allOf:
                                - type: string
                                  format: bytes
                                  pattern: '^0x[a-fA-F0-9]{192}$'
                                  example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                                - description: 'The BLS signature of the `IndexedAttestation`, created by the validator of the attestation.'
                            data:
                              type: object
                              description: 'The [`AttestationData`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#attestationdata) object from the Eth2.0 spec.'
                              properties:
                                slot:
                                  type: string
                                  example: '1'
                                index:
                                  type: string
                                  example: '1'
                                beacon_block_root:
                                  allOf:
                                    - type: string
                                      format: hex
                                      example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                      pattern: '^0x[a-fA-F0-9]{64}$'
                                    - description: LMD GHOST vote.
                                source:
                                  type: object
                                  description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                                  properties:
                                    epoch:
                                      type: string
                                      example: '1'
                                    root:
                                      type: string
                                      format: hex
                                      example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                      pattern: '^0x[a-fA-F0-9]{64}$'
                                target:
                                  type: object
                                  description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                                  properties:
                                    epoch:
                                      type: string
                                      example: '1'
                                    root:
                                      type: string
                                      format: hex
                                      example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                      pattern: '^0x[a-fA-F0-9]{64}$'
        '500':
          description: Beacon node internal error.
    post:
      operationId: submitPoolAttesterSlashings
      summary: Submit AttesterSlashing object to node's pool
      description: Submits AttesterSlashing object to node's pool and if passes validation node MUST broadcast it to network.
      tags:
        - Beacon
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: 'The [`AttesterSlashing`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/core/0_beacon-chain.md#attesterslashing) object from the Eth2.0 spec.'
              properties:
                attestation_1:
                  type: object
                  description: 'The [`IndexedAttestation`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#indexedattestation) object from the Eth2.0 spec.'
                  properties:
                    attesting_indices:
                      type: array
                      maxItems: 2048
                      description: Attesting validator indices
                      items:
                        type: string
                        example: '1'
                    signature:
                      allOf:
                        - type: string
                          format: bytes
                          pattern: '^0x[a-fA-F0-9]{192}$'
                          example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                        - description: 'The BLS signature of the `IndexedAttestation`, created by the validator of the attestation.'
                    data:
                      type: object
                      description: 'The [`AttestationData`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#attestationdata) object from the Eth2.0 spec.'
                      properties:
                        slot:
                          type: string
                          example: '1'
                        index:
                          type: string
                          example: '1'
                        beacon_block_root:
                          allOf:
                            - type: string
                              format: hex
                              example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                              pattern: '^0x[a-fA-F0-9]{64}$'
                            - description: LMD GHOST vote.
                        source:
                          type: object
                          description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                          properties:
                            epoch:
                              type: string
                              example: '1'
                            root:
                              type: string
                              format: hex
                              example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                              pattern: '^0x[a-fA-F0-9]{64}$'
                        target:
                          type: object
                          description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                          properties:
                            epoch:
                              type: string
                              example: '1'
                            root:
                              type: string
                              format: hex
                              example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                              pattern: '^0x[a-fA-F0-9]{64}$'
                attestation_2:
                  type: object
                  description: 'The [`IndexedAttestation`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#indexedattestation) object from the Eth2.0 spec.'
                  properties:
                    attesting_indices:
                      type: array
                      maxItems: 2048
                      description: Attesting validator indices
                      items:
                        type: string
                        example: '1'
                    signature:
                      allOf:
                        - type: string
                          format: bytes
                          pattern: '^0x[a-fA-F0-9]{192}$'
                          example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                        - description: 'The BLS signature of the `IndexedAttestation`, created by the validator of the attestation.'
                    data:
                      type: object
                      description: 'The [`AttestationData`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#attestationdata) object from the Eth2.0 spec.'
                      properties:
                        slot:
                          type: string
                          example: '1'
                        index:
                          type: string
                          example: '1'
                        beacon_block_root:
                          allOf:
                            - type: string
                              format: hex
                              example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                              pattern: '^0x[a-fA-F0-9]{64}$'
                            - description: LMD GHOST vote.
                        source:
                          type: object
                          description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                          properties:
                            epoch:
                              type: string
                              example: '1'
                            root:
                              type: string
                              format: hex
                              example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                              pattern: '^0x[a-fA-F0-9]{64}$'
                        target:
                          type: object
                          description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                          properties:
                            epoch:
                              type: string
                              example: '1'
                            root:
                              type: string
                              format: hex
                              example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                              pattern: '^0x[a-fA-F0-9]{64}$'
      responses:
        '200':
          description: Success
        '400':
          description: 'Invalid attester slashing. [See attester_slashing topic validation](https://github.com/ethereum/eth2.0-specs/blob/v0.11.3/specs/phase0/p2p-interface.md#global-topics)'
        '500':
          description: Beacon node internal error.
  /v1/beacon/pool/proposer_slashings:
    get:
      operationId: getPoolProposerSlashings
      summary: Get ProposerSlashings from operations pool
      description: Retrieves proposer slashings known by the node but not necessarily incorporated into any block
      tags:
        - Beacon
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      description: 'The [`ProposerSlashing`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#proposerslashing) object from the Eth2.0 spec.'
                      properties:
                        signed_header_1:
                          type: object
                          description: 'The [`SignedBeaconBlockHeader`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the Eth2.0 spec.'
                          properties:
                            message:
                              description: 'The [`BeaconBlockHeader`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the Eth2.0 spec.'
                              allOf:
                                - type: object
                                  properties:
                                    slot:
                                      allOf:
                                        - type: string
                                          example: '1'
                                        - description: The slot to which this block corresponds.
                                    proposer_index:
                                      allOf:
                                        - type: string
                                          example: '1'
                                        - description: Index of validator in validator registry.
                                    parent_root:
                                      allOf:
                                        - type: string
                                          format: hex
                                          example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                          pattern: '^0x[a-fA-F0-9]{64}$'
                                        - description: The signing merkle root of the parent `BeaconBlock`.
                                    state_root:
                                      allOf:
                                        - type: string
                                          format: hex
                                          example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                          pattern: '^0x[a-fA-F0-9]{64}$'
                                        - description: The tree hash merkle root of the `BeaconState` for the `BeaconBlock`.
                                - type: object
                                  properties:
                                    body_root:
                                      allOf:
                                        - type: string
                                          format: hex
                                          example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                          pattern: '^0x[a-fA-F0-9]{64}$'
                                        - description: The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`
                            signature:
                              type: string
                              format: bytes
                              pattern: '^0x[a-fA-F0-9]{192}$'
                              example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                        signed_header_2:
                          type: object
                          description: 'The [`SignedBeaconBlockHeader`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the Eth2.0 spec.'
                          properties:
                            message:
                              description: 'The [`BeaconBlockHeader`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the Eth2.0 spec.'
                              allOf:
                                - type: object
                                  properties:
                                    slot:
                                      allOf:
                                        - type: string
                                          example: '1'
                                        - description: The slot to which this block corresponds.
                                    proposer_index:
                                      allOf:
                                        - type: string
                                          example: '1'
                                        - description: Index of validator in validator registry.
                                    parent_root:
                                      allOf:
                                        - type: string
                                          format: hex
                                          example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                          pattern: '^0x[a-fA-F0-9]{64}$'
                                        - description: The signing merkle root of the parent `BeaconBlock`.
                                    state_root:
                                      allOf:
                                        - type: string
                                          format: hex
                                          example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                          pattern: '^0x[a-fA-F0-9]{64}$'
                                        - description: The tree hash merkle root of the `BeaconState` for the `BeaconBlock`.
                                - type: object
                                  properties:
                                    body_root:
                                      allOf:
                                        - type: string
                                          format: hex
                                          example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                          pattern: '^0x[a-fA-F0-9]{64}$'
                                        - description: The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`
                            signature:
                              type: string
                              format: bytes
                              pattern: '^0x[a-fA-F0-9]{192}$'
                              example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
        '500':
          description: Beacon node internal error.
    post:
      operationId: submitPoolProposerSlashings
      summary: Submit ProposerSlashing object to node's pool
      description: Submits ProposerSlashing object to node's pool and if passes validation  node MUST broadcast it to network.
      tags:
        - Beacon
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: 'The [`ProposerSlashing`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#proposerslashing) object from the Eth2.0 spec.'
              properties:
                signed_header_1:
                  type: object
                  description: 'The [`SignedBeaconBlockHeader`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the Eth2.0 spec.'
                  properties:
                    message:
                      description: 'The [`BeaconBlockHeader`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the Eth2.0 spec.'
                      allOf:
                        - type: object
                          properties:
                            slot:
                              allOf:
                                - type: string
                                  example: '1'
                                - description: The slot to which this block corresponds.
                            proposer_index:
                              allOf:
                                - type: string
                                  example: '1'
                                - description: Index of validator in validator registry.
                            parent_root:
                              allOf:
                                - type: string
                                  format: hex
                                  example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                  pattern: '^0x[a-fA-F0-9]{64}$'
                                - description: The signing merkle root of the parent `BeaconBlock`.
                            state_root:
                              allOf:
                                - type: string
                                  format: hex
                                  example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                  pattern: '^0x[a-fA-F0-9]{64}$'
                                - description: The tree hash merkle root of the `BeaconState` for the `BeaconBlock`.
                        - type: object
                          properties:
                            body_root:
                              allOf:
                                - type: string
                                  format: hex
                                  example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                  pattern: '^0x[a-fA-F0-9]{64}$'
                                - description: The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`
                    signature:
                      type: string
                      format: bytes
                      pattern: '^0x[a-fA-F0-9]{192}$'
                      example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                signed_header_2:
                  type: object
                  description: 'The [`SignedBeaconBlockHeader`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the Eth2.0 spec.'
                  properties:
                    message:
                      description: 'The [`BeaconBlockHeader`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the Eth2.0 spec.'
                      allOf:
                        - type: object
                          properties:
                            slot:
                              allOf:
                                - type: string
                                  example: '1'
                                - description: The slot to which this block corresponds.
                            proposer_index:
                              allOf:
                                - type: string
                                  example: '1'
                                - description: Index of validator in validator registry.
                            parent_root:
                              allOf:
                                - type: string
                                  format: hex
                                  example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                  pattern: '^0x[a-fA-F0-9]{64}$'
                                - description: The signing merkle root of the parent `BeaconBlock`.
                            state_root:
                              allOf:
                                - type: string
                                  format: hex
                                  example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                  pattern: '^0x[a-fA-F0-9]{64}$'
                                - description: The tree hash merkle root of the `BeaconState` for the `BeaconBlock`.
                        - type: object
                          properties:
                            body_root:
                              allOf:
                                - type: string
                                  format: hex
                                  example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                  pattern: '^0x[a-fA-F0-9]{64}$'
                                - description: The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`
                    signature:
                      type: string
                      format: bytes
                      pattern: '^0x[a-fA-F0-9]{192}$'
                      example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
      responses:
        '200':
          description: Success
        '400':
          description: 'Invalid proposer slashing. [See proposer_slashing topic validation](https://github.com/ethereum/eth2.0-specs/blob/v0.11.3/specs/phase0/p2p-interface.md#global-topics)'
        '500':
          description: Beacon node internal error.
  /v1/beacon/pool/voluntary_exits:
    get:
      operationId: getPoolVoluntaryExits
      summary: Get SignedVoluntaryExit from operations pool
      description: Retrieves voluntary exits known by the node but not necessarily incorporated into any block
      tags:
        - Beacon
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      description: 'The [`SignedVoluntaryExit`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the Eth2.0 spec.'
                      properties:
                        message:
                          type: object
                          description: 'The [`VoluntaryExit`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#voluntaryexit) object from the Eth2.0 spec.'
                          properties:
                            epoch:
                              allOf:
                                - type: string
                                  example: '1'
                                - description: Minimum epoch for processing exit.
                            validator_index:
                              allOf:
                                - type: string
                                  example: '1'
                                - description: Index of the exiting validator.
                        signature:
                          type: string
                          format: bytes
                          pattern: '^0x[a-fA-F0-9]{192}$'
                          example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
        '500':
          description: Beacon node internal error.
    post:
      operationId: submitPoolVoluntaryExit
      summary: Submit SignedVoluntaryExit object to node's pool
      description: Submits SignedVoluntaryExit object to node's pool and if passes validation node MUST broadcast it to network.
      tags:
        - Beacon
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              description: 'The [`SignedVoluntaryExit`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the Eth2.0 spec.'
              properties:
                message:
                  type: object
                  description: 'The [`VoluntaryExit`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#voluntaryexit) object from the Eth2.0 spec.'
                  properties:
                    epoch:
                      allOf:
                        - type: string
                          example: '1'
                        - description: Minimum epoch for processing exit.
                    validator_index:
                      allOf:
                        - type: string
                          example: '1'
                        - description: Index of the exiting validator.
                signature:
                  type: string
                  format: bytes
                  pattern: '^0x[a-fA-F0-9]{192}$'
                  example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
      responses:
        '200':
          description: Voluntary exit is stored in node and broadcasted to network
        '400':
          description: Invalid voluntary exit.
        '500':
          description: Beacon node internal error.
  /v1/node/identity:
    get:
      operationId: getNetworkIdentity
      tags:
        - Node
      summary: Get node network identity
      description: Retrieves data about the node's network presence
      responses:
        '200':
          description: Request successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      peer_id:
                        type: string
                        description: 'Cryptographic hash of a peer’s public key. [Read more](https://docs.libp2p.io/concepts/peer-id/)'
                        example: QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N
                      enr:
                        type: string
                        description: 'Ethereum node record. [Read more](https://eips.ethereum.org/EIPS/eip-778)'
                        example: 'enr:-IS4QHCYrYZbAKWCBRlAy5zzaDZXJBGkcnh4MHcBFZntXNFrdvJjX04jRzjzCBOonrkTfj499SZuOh8R33Ls8RRcy5wBgmlkgnY0gmlwhH8AAAGJc2VjcDI1NmsxoQPKY0yuDUmstAHYpMa2_oxVtw0RW_QAdpzBQA8yWM0xOIN1ZHCCdl8'
                      p2p_addresses:
                        type: array
                        items:
                          allOf:
                            - type: string
                              description: '[Read more](https://docs.libp2p.io/reference/glossary/#multiaddr)'
                              example: /ip4/7.7.7.7/tcp/4242/p2p/QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N
                            - description: 'Node''s addresses on which eth2 rpc requests are served. [Read more](https://docs.libp2p.io/reference/glossary/#multiaddr)'
                      discovery_addresses:
                        type: array
                        items:
                          allOf:
                            - type: string
                              description: '[Read more](https://docs.libp2p.io/reference/glossary/#multiaddr)'
                              example: /ip4/7.7.7.7/tcp/4242/p2p/QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N
                            - description: 'Node''s addresses on which is listening for discv5 requests. [Read more](https://docs.libp2p.io/reference/glossary/#multiaddr)'
                      metadata:
                        type: object
                        description: 'Based on eth2 [Metadata object](https://github.com/ethereum/eth2.0-specs/blob/v0.12.0/specs/phase0/p2p-interface.md#metadata)'
                        properties:
                          seq_number:
                            allOf:
                              - description: 'Uint64 starting at 0 used to version the node''s metadata. If any other field in the local MetaData changes, the node MUST increment seq_number by 1.'
                              - type: string
                                example: '1'
                          attnets:
                            allOf:
                              - description: Bitvector representing the node's persistent attestation subnet subscriptions.
                              - type: string
                                format: hex
                                pattern: '^0x[a-fA-F0-9]{2,}$'
        '500':
          description: Beacon node internal error.
  /v1/node/peers:
    get:
      operationId: getPeers
      tags:
        - Node
      summary: Get node network peers
      description: Retrieves data about the node's network peers
      responses:
        '200':
          description: Request successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        peer_id:
                          type: string
                          description: 'Cryptographic hash of a peer’s public key. [Read more](https://docs.libp2p.io/concepts/peer-id/)'
                          example: QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N
                        enr:
                          type: string
                          description: 'Ethereum node record. [Read more](https://eips.ethereum.org/EIPS/eip-778)'
                          example: 'enr:-IS4QHCYrYZbAKWCBRlAy5zzaDZXJBGkcnh4MHcBFZntXNFrdvJjX04jRzjzCBOonrkTfj499SZuOh8R33Ls8RRcy5wBgmlkgnY0gmlwhH8AAAGJc2VjcDI1NmsxoQPKY0yuDUmstAHYpMa2_oxVtw0RW_QAdpzBQA8yWM0xOIN1ZHCCdl8'
                        address:
                          type: string
                          description: '[Read more](https://docs.libp2p.io/reference/glossary/#multiaddr)'
                          example: /ip4/7.7.7.7/tcp/4242/p2p/QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N
                        state:
                          type: string
                          enum:
                            - disconnected
                            - connecting
                            - connected
                            - disconnecting
                        direction:
                          type: string
                          enum:
                            - inbound
                            - outbound
        '500':
          description: Beacon node internal error.
  '/v1/node/peers/{peer_id}':
    get:
      operationId: getPeer
      tags:
        - Node
      summary: Get peer
      description: Retrieves data about the given peer
      parameters:
        - name: peer_id
          in: path
          required: true
          schema:
            type: string
            description: 'Cryptographic hash of a peer’s public key. [Read more](https://docs.libp2p.io/concepts/peer-id/)'
            example: QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N
      responses:
        '200':
          description: Request successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      peer_id:
                        type: string
                        description: 'Cryptographic hash of a peer’s public key. [Read more](https://docs.libp2p.io/concepts/peer-id/)'
                        example: QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N
                      enr:
                        type: string
                        description: 'Ethereum node record. [Read more](https://eips.ethereum.org/EIPS/eip-778)'
                        example: 'enr:-IS4QHCYrYZbAKWCBRlAy5zzaDZXJBGkcnh4MHcBFZntXNFrdvJjX04jRzjzCBOonrkTfj499SZuOh8R33Ls8RRcy5wBgmlkgnY0gmlwhH8AAAGJc2VjcDI1NmsxoQPKY0yuDUmstAHYpMa2_oxVtw0RW_QAdpzBQA8yWM0xOIN1ZHCCdl8'
                      address:
                        type: string
                        description: '[Read more](https://docs.libp2p.io/reference/glossary/#multiaddr)'
                        example: /ip4/7.7.7.7/tcp/4242/p2p/QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N
                      state:
                        type: string
                        enum:
                          - disconnected
                          - connecting
                          - connected
                          - disconnecting
                      direction:
                        type: string
                        enum:
                          - inbound
                          - outbound
        '500':
          description: Beacon node internal error.
  /v1/node/version:
    get:
      operationId: getNodeVersion
      tags:
        - Node
      summary: Get version string of the running beacon node.
      description: 'Requests that the beacon node identify information about its implementation in a format similar to a  [HTTP User-Agent](https://tools.ietf.org/html/rfc7231#section-5.5.3) field.'
      responses:
        '200':
          description: Request successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      version:
                        type: string
                        description: 'A string which uniquely identifies the client implementation and its version; similar to [HTTP User-Agent](https://tools.ietf.org/html/rfc7231#section-5.5.3).'
                        example: Lighthouse / v0.1.5 (Linux x86_64)
        '500':
          description: Beacon node internal error.
  /v1/node/syncing:
    get:
      operationId: getSyncingStatus
      tags:
        - Node
        - ValidatorRequiredApi
      summary: Get node syncing status
      description: 'Requests the beacon node to describe if it''s currently syncing or not, and if it is, what block it is up to.'
      responses:
        '200':
          description: Request successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      head_slot:
                        allOf:
                          - description: Head slot node is trying to reach
                          - type: string
                            example: '1'
                      sync_distance:
                        allOf:
                          - description: How many slots node needs to process to reach head. 0 if synced.
                          - type: string
                            example: '1'
        '500':
          description: Beacon node internal error.
  /v1/node/health:
    get:
      operationId: getHealth
      tags:
        - Node
      summary: Get health check
      description: Returns node health status in http status codes. Useful for load balancers.
      responses:
        '200':
          description: Node is ready
        '206':
          description: Node is syncing but can serve incomplete data
        '503':
          description: Node not initialized or having issues
  /v1/config/fork_schedule:
    get:
      operationId: getForkSchedule
      summary: Get scheduled upcoming forks.
      description: Retrieve all scheduled upcoming forks this node is aware of.
      tags:
        - Config
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      description: 'The [`Fork`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#fork) object from the Eth2.0 spec.'
                      properties:
                        previous_version:
                          type: string
                          description: a fork version number
                          example: '0x00000000'
                          pattern: '^0x[a-fA-F0-9]{8}$'
                        current_version:
                          type: string
                          description: a fork version number
                          example: '0x00000000'
                          pattern: '^0x[a-fA-F0-9]{8}$'
                        epoch:
                          type: string
                          example: '1'
        '500':
          description: Beacon node internal error.
  /v1/config/spec:
    get:
      operationId: getSpec
      summary: Get spec params.
      description: |
        Retrieve specification configuration (without Phase 1 params) used on this node.
        [Specification params list](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/configs/mainnet.yaml)

        Values are returned with following format:
          - any value starting with 0x in the spec is returned as a hex string
          - all other values are returned as number
      tags:
        - Config
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    description: |
                      Key value mapping of Phase 0[spec variables](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/configs/mainnet.yaml).
                      Values are returned with following format:
                        - any value starting with 0x in the spec is returned as a hex string
                        - all other values are returned as number
                    type: object
        '500':
          description: Beacon node internal error.
  /v1/config/deposit_contract:
    get:
      operationId: getDepositContract
      summary: Get deposit contract address.
      description: Retrieve deposit contract address and genesis fork version.
      tags:
        - Config
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      chain_id:
                        description: Id of Eth1 chain on which contract is deployed.
                        type: integer
                        format: int32
                        example: 1
                        minimum: 1
                      address:
                        allOf:
                          - type: string
                            format: hex
                            example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                            pattern: '^0x[a-fA-F0-9]{64}$'
                          - description: Hex encoded deposit contract address with 0x prefix
                          - example: '0x1Db3439a222C519ab44bb1144fC28167b4Fa6EE6'
        '500':
          description: Beacon node internal error.
  '/validator/duties/{epoch}/attester':
    get:
      tags:
        - ValidatorRequiredApi
        - Validator
      summary: Get attester duties
      operationId: getAttesterDuties
      description: 'Requests the beacon node to provide a set of _duties_, which are actions that should be performed by validators, for a particular epoch. Duties should only need to be checked once per epoch, however a chain reorganization (of > MIN_SEED_LOOKAHEAD epochs) could occur, resulting in a change of duties. For full safety, this API call should be polled at every slot to ensure that chain reorganizations are recognized, and to ensure that the beacon node is properly synchronized.'
      parameters:
        - name: validator_pubkeys
          in: query
          required: true
          description: An array of hex-encoded BLS public keys
          schema:
            type: array
            items:
              type: string
              pattern: '^0x[a-fA-F0-9]{96}$'
              description: 'The validator''s BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._'
              example: '0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a'
            minItems: 1
            maxItems: 10
        - name: epoch
          description: Should only be allowed 1 epoch
          in: path
          required: true
          schema:
            type: string
            example: '1'
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    validator_pubkey:
                      type: string
                      pattern: '^0x[a-fA-F0-9]{96}$'
                      description: 'The validator''s BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._'
                      example: '0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a'
                    aggregator_modulo:
                      allOf:
                        - type: string
                          example: '1'
                        - description: 'Value which validator can use to calculate is_aggregator (aka bytes_to_int(hash(slot_signature)[0:8]) % aggregator_modulo == 0)'
                    attestation_slot:
                      allOf:
                        - type: string
                          example: '1'
                        - description: The slot at which the validator must attest.
                    committee_index:
                      allOf:
                        - type: string
                          example: '1'
                        - description: The committee index
        '400':
          description: Invalid request syntax.
        '406':
          description: Duties cannot be provided for the requested epoch.
        '500':
          description: Beacon node internal error.
        '503':
          description: 'Beacon node is currently syncing, try again later.'
  '/validator/duties/{epoch}/proposer':
    get:
      tags:
        - ValidatorRequiredApi
        - Validator
      summary: Get block proposers duties
      operationId: getProposerDuties
      description: Request beacon node to provide all validators that are suppose to propose block in given epoch
      parameters:
        - name: epoch
          in: path
          required: true
          schema:
            type: integer
            minimum: 0
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                type: object
                description: Map where key is 'slot' and value is public key of validator that is suppose to produce block
                example:
                  '1': '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc'
                  '2': '0x2b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc'
        '400':
          description: Invalid request syntax.
        '406':
          description: Duties cannot be provided for the requested epoch.
        '500':
          description: Beacon node internal error.
        '503':
          description: 'Beacon node is currently syncing, try again later.'
  /validator/beacon_committee_subscriptions:
    post:
      operationId: subscribeToBeaconCommitteeSubnet
      summary: Subscribe beacon node to commitee attestation subnet
      description: 'If validator is connected to multiple nodes, it should send this request to all of them to insure subnet network stability.'
      tags:
        - ValidatorRequiredApi
        - Validator
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  attestation_committee_index:
                    type: string
                    example: '1'
                  slot:
                    allOf:
                      - type: string
                        example: '1'
                      - description: Should be slot at which validator is assigned to attest
                  slot_signature:
                    allOf:
                      - type: string
                        format: bytes
                        pattern: '^0x[a-fA-F0-9]{192}$'
                        example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                      - description: Should be valid against given slot and validator pubkey.
                  aggregator_pubkey:
                    type: string
                    pattern: '^0x[a-fA-F0-9]{96}$'
                    description: 'The validator''s BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._'
                    example: '0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a'
      responses:
        '200':
          description: Slot signature is valid and beacon node is subscribed to given committee attestation subnet.
        '400':
          description: Invalid request syntax.
        '403':
          description: Validator is not aggregator
        '500':
          description: Beacon node internal error.
        '503':
          description: 'Beacon node is currently syncing, try again later.'
  '/validator/beacon_committee_subscription/{committee_index}/attestations':
    get:
      summary: Get unaggregated wire attestations
      operationId: getWireAttestations
      description: Endpoint should aggregate all collected attestations and produce AggregateAndProof without proof. Validator running on weak hardware is expected to add proof and publish
      tags:
        - Validator
      parameters:
        - name: committee_index
          in: path
          required: true
          description: Index of validator committee
          schema:
            type: number
        - name: attestation_data
          in: query
          required: true
          description: SSZ serialized AttestationData that validator want's aggregated
          schema:
            type: string
            format: hex
            example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
            pattern: '^0x[a-fA-F0-9]{64}$'
      responses:
        '200':
          description: Returns only unaggregated attestations for given committee.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  description: 'The [`Attestation`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#attestation) object from the Eth2.0 spec.'
                  properties:
                    aggregation_bits:
                      type: string
                      format: byte
                      pattern: '^0x[a-fA-F0-9]+$'
                      description: Attester aggregation bits.
                    signature:
                      allOf:
                        - type: string
                          format: bytes
                          pattern: '^0x[a-fA-F0-9]{192}$'
                          example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                        - description: BLS aggregate signature.
                    data:
                      type: object
                      description: 'The [`AttestationData`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#attestationdata) object from the Eth2.0 spec.'
                      properties:
                        slot:
                          type: string
                          example: '1'
                        index:
                          type: string
                          example: '1'
                        beacon_block_root:
                          allOf:
                            - type: string
                              format: hex
                              example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                              pattern: '^0x[a-fA-F0-9]{64}$'
                            - description: LMD GHOST vote.
                        source:
                          type: object
                          description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                          properties:
                            epoch:
                              type: string
                              example: '1'
                            root:
                              type: string
                              format: hex
                              example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                              pattern: '^0x[a-fA-F0-9]{64}$'
                        target:
                          type: object
                          description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                          properties:
                            epoch:
                              type: string
                              example: '1'
                            root:
                              type: string
                              format: hex
                              example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                              pattern: '^0x[a-fA-F0-9]{64}$'
        '400':
          description: Invalid request syntax.
        '500':
          description: Beacon node internal error.
  /validator/aggregate_and_proof:
    get:
      operationId: getAggregatedAttestation
      summary: Get aggregated attestations
      description: Aggregates all attestations matching given attestation data
      tags:
        - ValidatorRequiredApi
        - Validator
      parameters:
        - name: attestation_data
          in: query
          required: true
          description: SSZ serialized AttestationData that validator want's aggregated
          schema:
            type: string
            format: hex
            example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
            pattern: '^0x[a-fA-F0-9]{64}$'
      responses:
        '200':
          description: Returns aggregated attestations for attestation_data.
          content:
            application/json:
              schema:
                type: object
                description: 'The [`Attestation`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#attestation) object from the Eth2.0 spec.'
                properties:
                  aggregation_bits:
                    type: string
                    format: byte
                    pattern: '^0x[a-fA-F0-9]+$'
                    description: Attester aggregation bits.
                  signature:
                    allOf:
                      - type: string
                        format: bytes
                        pattern: '^0x[a-fA-F0-9]{192}$'
                        example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                      - description: BLS aggregate signature.
                  data:
                    type: object
                    description: 'The [`AttestationData`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#attestationdata) object from the Eth2.0 spec.'
                    properties:
                      slot:
                        type: string
                        example: '1'
                      index:
                        type: string
                        example: '1'
                      beacon_block_root:
                        allOf:
                          - type: string
                            format: hex
                            example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                            pattern: '^0x[a-fA-F0-9]{64}$'
                          - description: LMD GHOST vote.
                      source:
                        type: object
                        description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                        properties:
                          epoch:
                            type: string
                            example: '1'
                          root:
                            type: string
                            format: hex
                            example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                            pattern: '^0x[a-fA-F0-9]{64}$'
                      target:
                        type: object
                        description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                        properties:
                          epoch:
                            type: string
                            example: '1'
                          root:
                            type: string
                            format: hex
                            example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                            pattern: '^0x[a-fA-F0-9]{64}$'
        '400':
          description: Invalid request syntax.
        '403':
          description: Validator is not aggregator
        '500':
          description: Beacon node internal error.
    post:
      operationId: publishAggregateAndProof
      summary: Publish aggregate and proof
      description: Verifies given aggregate and proof and publishes it on appropriate gossipsub topic.
      tags:
        - ValidatorRequiredApi
        - Validator
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                properties:
                  message:
                    allOf:
                      - type: object
                        description: 'The [`AggregateAndProof`](https://github.com/ethereum/eth2.0-specs/blob/v0.9.2/specs/validator/0_beacon-chain-validator.md#aggregateandproof) without selection_proof'
                        properties:
                          aggregator_index:
                            type: string
                            example: '1'
                          attestation:
                            type: object
                            description: 'The [`Attestation`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#attestation) object from the Eth2.0 spec.'
                            properties:
                              aggregation_bits:
                                type: string
                                format: byte
                                pattern: '^0x[a-fA-F0-9]+$'
                                description: Attester aggregation bits.
                              signature:
                                allOf:
                                  - type: string
                                    format: bytes
                                    pattern: '^0x[a-fA-F0-9]{192}$'
                                    example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                                  - description: BLS aggregate signature.
                              data:
                                type: object
                                description: 'The [`AttestationData`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#attestationdata) object from the Eth2.0 spec.'
                                properties:
                                  slot:
                                    type: string
                                    example: '1'
                                  index:
                                    type: string
                                    example: '1'
                                  beacon_block_root:
                                    allOf:
                                      - type: string
                                        format: hex
                                        example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                        pattern: '^0x[a-fA-F0-9]{64}$'
                                      - description: LMD GHOST vote.
                                  source:
                                    type: object
                                    description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                                    properties:
                                      epoch:
                                        type: string
                                        example: '1'
                                      root:
                                        type: string
                                        format: hex
                                        example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                        pattern: '^0x[a-fA-F0-9]{64}$'
                                  target:
                                    type: object
                                    description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                                    properties:
                                      epoch:
                                        type: string
                                        example: '1'
                                      root:
                                        type: string
                                        format: hex
                                        example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                        pattern: '^0x[a-fA-F0-9]{64}$'
                      - type: object
                        properties:
                          selection_proof:
                            type: string
                            format: bytes
                            pattern: '^0x[a-fA-F0-9]{192}$'
                            example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                  signature:
                    type: string
                    format: bytes
                    pattern: '^0x[a-fA-F0-9]{192}$'
                    example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
      responses:
        '200':
          description: Successful response
        '400':
          description: Invalid request syntax.
        '500':
          description: Beacon node internal error.
  /validator/attestation:
    get:
      tags:
        - ValidatorRequiredApi
        - Validator
      operationId: produceAttestation
      summary: 'Produce an attestation, without signature.'
      description: 'Requests that the beacon node produce an Attestation, with a blank signature field, which the validator will then sign.'
      parameters:
        - name: validator_pubkey
          in: query
          required: true
          description: Uniquely identifying which validator this attestation is to be produced for.
          schema:
            type: string
            pattern: '^0x[a-fA-F0-9]{96}$'
            description: 'The validator''s BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._'
            example: '0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a'
        - name: slot
          in: query
          required: true
          description: The slot for which the attestation should be proposed.
          schema:
            type: integer
            minimum: 0
        - name: committee_index
          in: query
          description: The committee index for which the attestation should be proposed.
          required: true
          schema:
            type: string
            example: '1'
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                type: object
                description: 'The [`Attestation`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#attestation) object from the Eth2.0 spec.'
                properties:
                  aggregation_bits:
                    type: string
                    format: byte
                    pattern: '^0x[a-fA-F0-9]+$'
                    description: Attester aggregation bits.
                  signature:
                    allOf:
                      - type: string
                        format: bytes
                        pattern: '^0x[a-fA-F0-9]{192}$'
                        example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                      - description: BLS aggregate signature.
                  data:
                    type: object
                    description: 'The [`AttestationData`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#attestationdata) object from the Eth2.0 spec.'
                    properties:
                      slot:
                        type: string
                        example: '1'
                      index:
                        type: string
                        example: '1'
                      beacon_block_root:
                        allOf:
                          - type: string
                            format: hex
                            example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                            pattern: '^0x[a-fA-F0-9]{64}$'
                          - description: LMD GHOST vote.
                      source:
                        type: object
                        description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                        properties:
                          epoch:
                            type: string
                            example: '1'
                          root:
                            type: string
                            format: hex
                            example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                            pattern: '^0x[a-fA-F0-9]{64}$'
                      target:
                        type: object
                        description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                        properties:
                          epoch:
                            type: string
                            example: '1'
                          root:
                            type: string
                            format: hex
                            example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                            pattern: '^0x[a-fA-F0-9]{64}$'
        '400':
          description: Invalid request syntax.
        '500':
          description: Beacon node internal error.
        '503':
          description: 'Beacon node is currently syncing, try again later.'
  /validator/block:
    get:
      tags:
        - ValidatorRequiredApi
        - Validator
      operationId: produceBlock
      summary: 'Produce a new block, without signature.'
      description: 'Requests a beacon node to produce a valid block, which can then be signed by a validator.'
      parameters:
        - name: slot
          in: query
          required: true
          description: The slot for which the block should be proposed.
          schema:
            type: string
            example: '1'
        - name: randao_reveal
          in: query
          required: true
          description: The validator's randao reveal value.
          schema:
            type: string
            format: bytes
            pattern: '^0x[a-fA-F0-9]{192}$'
            example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                description: 'The [`BeaconBlock`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#beaconblock) object from the Eth2.0 spec.'
                allOf:
                  - type: object
                    properties:
                      slot:
                        allOf:
                          - type: string
                            example: '1'
                          - description: The slot to which this block corresponds.
                      proposer_index:
                        allOf:
                          - type: string
                            example: '1'
                          - description: Index of validator in validator registry.
                      parent_root:
                        allOf:
                          - type: string
                            format: hex
                            example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                            pattern: '^0x[a-fA-F0-9]{64}$'
                          - description: The signing merkle root of the parent `BeaconBlock`.
                      state_root:
                        allOf:
                          - type: string
                            format: hex
                            example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                            pattern: '^0x[a-fA-F0-9]{64}$'
                          - description: The tree hash merkle root of the `BeaconState` for the `BeaconBlock`.
                  - type: object
                    properties:
                      body:
                        type: object
                        description: 'The [`BeaconBlockBody`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#beaconblockbody) object from the Eth2.0 spec.'
                        properties:
                          randao_reveal:
                            allOf:
                              - type: string
                                format: bytes
                                pattern: '^0x[a-fA-F0-9]{192}$'
                                example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                              - description: The RanDAO reveal value provided by the validator.
                          eth1_data:
                            type: object
                            description: 'The [`Eth1Data`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#eth1data) object from the Eth2.0 spec.'
                            properties:
                              deposit_root:
                                allOf:
                                  - type: string
                                    format: hex
                                    example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                    pattern: '^0x[a-fA-F0-9]{64}$'
                                  - description: Root of the deposit tree.
                              deposit_count:
                                allOf:
                                  - type: string
                                    example: '1'
                                  - description: Total number of deposits.
                              block_hash:
                                allOf:
                                  - type: string
                                    format: hex
                                    example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                    pattern: '^0x[a-fA-F0-9]{64}$'
                                  - description: Ethereum 1.x block hash.
                          graffiti:
                            type: string
                            format: byte
                            pattern: '^0x[a-fA-F0-9]{64}$'
                          proposer_slashings:
                            type: array
                            items:
                              type: object
                              description: 'The [`ProposerSlashing`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#proposerslashing) object from the Eth2.0 spec.'
                              properties:
                                signed_header_1:
                                  type: object
                                  description: 'The [`SignedBeaconBlockHeader`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the Eth2.0 spec.'
                                  properties:
                                    message:
                                      description: 'The [`BeaconBlockHeader`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the Eth2.0 spec.'
                                      allOf:
                                        - type: object
                                          properties:
                                            slot:
                                              allOf:
                                                - type: string
                                                  example: '1'
                                                - description: The slot to which this block corresponds.
                                            proposer_index:
                                              allOf:
                                                - type: string
                                                  example: '1'
                                                - description: Index of validator in validator registry.
                                            parent_root:
                                              allOf:
                                                - type: string
                                                  format: hex
                                                  example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                                  pattern: '^0x[a-fA-F0-9]{64}$'
                                                - description: The signing merkle root of the parent `BeaconBlock`.
                                            state_root:
                                              allOf:
                                                - type: string
                                                  format: hex
                                                  example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                                  pattern: '^0x[a-fA-F0-9]{64}$'
                                                - description: The tree hash merkle root of the `BeaconState` for the `BeaconBlock`.
                                        - type: object
                                          properties:
                                            body_root:
                                              allOf:
                                                - type: string
                                                  format: hex
                                                  example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                                  pattern: '^0x[a-fA-F0-9]{64}$'
                                                - description: The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`
                                    signature:
                                      type: string
                                      format: bytes
                                      pattern: '^0x[a-fA-F0-9]{192}$'
                                      example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                                signed_header_2:
                                  type: object
                                  description: 'The [`SignedBeaconBlockHeader`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the Eth2.0 spec.'
                                  properties:
                                    message:
                                      description: 'The [`BeaconBlockHeader`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the Eth2.0 spec.'
                                      allOf:
                                        - type: object
                                          properties:
                                            slot:
                                              allOf:
                                                - type: string
                                                  example: '1'
                                                - description: The slot to which this block corresponds.
                                            proposer_index:
                                              allOf:
                                                - type: string
                                                  example: '1'
                                                - description: Index of validator in validator registry.
                                            parent_root:
                                              allOf:
                                                - type: string
                                                  format: hex
                                                  example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                                  pattern: '^0x[a-fA-F0-9]{64}$'
                                                - description: The signing merkle root of the parent `BeaconBlock`.
                                            state_root:
                                              allOf:
                                                - type: string
                                                  format: hex
                                                  example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                                  pattern: '^0x[a-fA-F0-9]{64}$'
                                                - description: The tree hash merkle root of the `BeaconState` for the `BeaconBlock`.
                                        - type: object
                                          properties:
                                            body_root:
                                              allOf:
                                                - type: string
                                                  format: hex
                                                  example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                                  pattern: '^0x[a-fA-F0-9]{64}$'
                                                - description: The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`
                                    signature:
                                      type: string
                                      format: bytes
                                      pattern: '^0x[a-fA-F0-9]{192}$'
                                      example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                          attester_slashings:
                            type: array
                            items:
                              type: object
                              description: 'The [`AttesterSlashing`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/core/0_beacon-chain.md#attesterslashing) object from the Eth2.0 spec.'
                              properties:
                                attestation_1:
                                  type: object
                                  description: 'The [`IndexedAttestation`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#indexedattestation) object from the Eth2.0 spec.'
                                  properties:
                                    attesting_indices:
                                      type: array
                                      maxItems: 2048
                                      description: Attesting validator indices
                                      items:
                                        type: string
                                        example: '1'
                                    signature:
                                      allOf:
                                        - type: string
                                          format: bytes
                                          pattern: '^0x[a-fA-F0-9]{192}$'
                                          example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                                        - description: 'The BLS signature of the `IndexedAttestation`, created by the validator of the attestation.'
                                    data:
                                      type: object
                                      description: 'The [`AttestationData`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#attestationdata) object from the Eth2.0 spec.'
                                      properties:
                                        slot:
                                          type: string
                                          example: '1'
                                        index:
                                          type: string
                                          example: '1'
                                        beacon_block_root:
                                          allOf:
                                            - type: string
                                              format: hex
                                              example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                              pattern: '^0x[a-fA-F0-9]{64}$'
                                            - description: LMD GHOST vote.
                                        source:
                                          type: object
                                          description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                                          properties:
                                            epoch:
                                              type: string
                                              example: '1'
                                            root:
                                              type: string
                                              format: hex
                                              example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                              pattern: '^0x[a-fA-F0-9]{64}$'
                                        target:
                                          type: object
                                          description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                                          properties:
                                            epoch:
                                              type: string
                                              example: '1'
                                            root:
                                              type: string
                                              format: hex
                                              example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                              pattern: '^0x[a-fA-F0-9]{64}$'
                                attestation_2:
                                  type: object
                                  description: 'The [`IndexedAttestation`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#indexedattestation) object from the Eth2.0 spec.'
                                  properties:
                                    attesting_indices:
                                      type: array
                                      maxItems: 2048
                                      description: Attesting validator indices
                                      items:
                                        type: string
                                        example: '1'
                                    signature:
                                      allOf:
                                        - type: string
                                          format: bytes
                                          pattern: '^0x[a-fA-F0-9]{192}$'
                                          example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                                        - description: 'The BLS signature of the `IndexedAttestation`, created by the validator of the attestation.'
                                    data:
                                      type: object
                                      description: 'The [`AttestationData`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#attestationdata) object from the Eth2.0 spec.'
                                      properties:
                                        slot:
                                          type: string
                                          example: '1'
                                        index:
                                          type: string
                                          example: '1'
                                        beacon_block_root:
                                          allOf:
                                            - type: string
                                              format: hex
                                              example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                              pattern: '^0x[a-fA-F0-9]{64}$'
                                            - description: LMD GHOST vote.
                                        source:
                                          type: object
                                          description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                                          properties:
                                            epoch:
                                              type: string
                                              example: '1'
                                            root:
                                              type: string
                                              format: hex
                                              example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                              pattern: '^0x[a-fA-F0-9]{64}$'
                                        target:
                                          type: object
                                          description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                                          properties:
                                            epoch:
                                              type: string
                                              example: '1'
                                            root:
                                              type: string
                                              format: hex
                                              example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                              pattern: '^0x[a-fA-F0-9]{64}$'
                          attestations:
                            type: array
                            items:
                              type: object
                              description: 'The [`Attestation`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#attestation) object from the Eth2.0 spec.'
                              properties:
                                aggregation_bits:
                                  type: string
                                  format: byte
                                  pattern: '^0x[a-fA-F0-9]+$'
                                  description: Attester aggregation bits.
                                signature:
                                  allOf:
                                    - type: string
                                      format: bytes
                                      pattern: '^0x[a-fA-F0-9]{192}$'
                                      example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                                    - description: BLS aggregate signature.
                                data:
                                  type: object
                                  description: 'The [`AttestationData`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#attestationdata) object from the Eth2.0 spec.'
                                  properties:
                                    slot:
                                      type: string
                                      example: '1'
                                    index:
                                      type: string
                                      example: '1'
                                    beacon_block_root:
                                      allOf:
                                        - type: string
                                          format: hex
                                          example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                          pattern: '^0x[a-fA-F0-9]{64}$'
                                        - description: LMD GHOST vote.
                                    source:
                                      type: object
                                      description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                                      properties:
                                        epoch:
                                          type: string
                                          example: '1'
                                        root:
                                          type: string
                                          format: hex
                                          example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                          pattern: '^0x[a-fA-F0-9]{64}$'
                                    target:
                                      type: object
                                      description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                                      properties:
                                        epoch:
                                          type: string
                                          example: '1'
                                        root:
                                          type: string
                                          format: hex
                                          example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                          pattern: '^0x[a-fA-F0-9]{64}$'
                          deposits:
                            type: array
                            items:
                              type: object
                              description: 'The [`Deposit`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#deposit) object from the Eth2.0 spec.'
                              properties:
                                proof:
                                  type: array
                                  description: Branch in the deposit tree.
                                  items:
                                    allOf:
                                      - type: string
                                        format: hex
                                        example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                        pattern: '^0x[a-fA-F0-9]{64}$'
                                  minItems: 32
                                  maxItems: 32
                                data:
                                  type: object
                                  description: 'The [`DepositData`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#depositdata) object from the Eth2.0 spec.'
                                  properties:
                                    pubkey:
                                      type: string
                                      pattern: '^0x[a-fA-F0-9]{96}$'
                                      description: 'The validator''s BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._'
                                      example: '0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a'
                                    withdrawal_credentials:
                                      allOf:
                                        - type: string
                                          format: hex
                                          example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                          pattern: '^0x[a-fA-F0-9]{64}$'
                                        - description: The withdrawal credentials.
                                    amount:
                                      allOf:
                                        - type: string
                                          example: '1'
                                        - description: Amount in Gwei.
                                    signature:
                                      allOf:
                                        - type: string
                                          format: bytes
                                          pattern: '^0x[a-fA-F0-9]{192}$'
                                          example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                                        - description: Container self-signature.
                          voluntary_exits:
                            type: array
                            items:
                              type: object
                              description: 'The [`VoluntaryExit`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#voluntaryexit) object from the Eth2.0 spec.'
                              properties:
                                epoch:
                                  allOf:
                                    - type: string
                                      example: '1'
                                    - description: Minimum epoch for processing exit.
                                validator_index:
                                  allOf:
                                    - type: string
                                      example: '1'
                                    - description: Index of the exiting validator.
        '400':
          description: Invalid request syntax.
        '500':
          description: Beacon node internal error.
        '503':
          description: 'Beacon node is currently syncing, try again later.'
    post:
      tags:
        - Validator
        - ValidatorRequiredApi
      summary: Publish a signed block.
      operationId: publishBlock
      description: 'Instructs the beacon node to broadcast a newly signed beacon block to the beacon network, to be included in the beacon chain. The beacon node is not required to validate the signed `BeaconBlock`, and a successful response (20X) only indicates that the broadcast has been successful. The beacon node is expected to integrate the new block into its state, and therefore validate the block internally, however blocks which fail the validation are still broadcast but a different status code is returned (202)'
      requestBody:
        description: 'The `BeaconBlock` object, as sent from the beacon node originally, but now with the signature field completed. Must be sent in JSON format in the body of the request.'
        required: true
        content:
          application/json:
            schema:
              type: object
              description: 'The [`SignedBeaconBlock`](https://github.com/ethereum/eth2.0-specs/blob/v0.10.1/specs/phase0/beacon-chain.md#signedbeaconblock) object envelope from the Eth2.0 spec.'
              properties:
                message:
                  description: 'The [`BeaconBlock`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#beaconblock) object from the Eth2.0 spec.'
                  allOf:
                    - type: object
                      properties:
                        slot:
                          allOf:
                            - type: string
                              example: '1'
                            - description: The slot to which this block corresponds.
                        proposer_index:
                          allOf:
                            - type: string
                              example: '1'
                            - description: Index of validator in validator registry.
                        parent_root:
                          allOf:
                            - type: string
                              format: hex
                              example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                              pattern: '^0x[a-fA-F0-9]{64}$'
                            - description: The signing merkle root of the parent `BeaconBlock`.
                        state_root:
                          allOf:
                            - type: string
                              format: hex
                              example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                              pattern: '^0x[a-fA-F0-9]{64}$'
                            - description: The tree hash merkle root of the `BeaconState` for the `BeaconBlock`.
                    - type: object
                      properties:
                        body:
                          type: object
                          description: 'The [`BeaconBlockBody`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#beaconblockbody) object from the Eth2.0 spec.'
                          properties:
                            randao_reveal:
                              allOf:
                                - type: string
                                  format: bytes
                                  pattern: '^0x[a-fA-F0-9]{192}$'
                                  example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                                - description: The RanDAO reveal value provided by the validator.
                            eth1_data:
                              type: object
                              description: 'The [`Eth1Data`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#eth1data) object from the Eth2.0 spec.'
                              properties:
                                deposit_root:
                                  allOf:
                                    - type: string
                                      format: hex
                                      example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                      pattern: '^0x[a-fA-F0-9]{64}$'
                                    - description: Root of the deposit tree.
                                deposit_count:
                                  allOf:
                                    - type: string
                                      example: '1'
                                    - description: Total number of deposits.
                                block_hash:
                                  allOf:
                                    - type: string
                                      format: hex
                                      example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                      pattern: '^0x[a-fA-F0-9]{64}$'
                                    - description: Ethereum 1.x block hash.
                            graffiti:
                              type: string
                              format: byte
                              pattern: '^0x[a-fA-F0-9]{64}$'
                            proposer_slashings:
                              type: array
                              items:
                                type: object
                                description: 'The [`ProposerSlashing`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#proposerslashing) object from the Eth2.0 spec.'
                                properties:
                                  signed_header_1:
                                    type: object
                                    description: 'The [`SignedBeaconBlockHeader`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the Eth2.0 spec.'
                                    properties:
                                      message:
                                        description: 'The [`BeaconBlockHeader`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the Eth2.0 spec.'
                                        allOf:
                                          - type: object
                                            properties:
                                              slot:
                                                allOf:
                                                  - type: string
                                                    example: '1'
                                                  - description: The slot to which this block corresponds.
                                              proposer_index:
                                                allOf:
                                                  - type: string
                                                    example: '1'
                                                  - description: Index of validator in validator registry.
                                              parent_root:
                                                allOf:
                                                  - type: string
                                                    format: hex
                                                    example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                                    pattern: '^0x[a-fA-F0-9]{64}$'
                                                  - description: The signing merkle root of the parent `BeaconBlock`.
                                              state_root:
                                                allOf:
                                                  - type: string
                                                    format: hex
                                                    example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                                    pattern: '^0x[a-fA-F0-9]{64}$'
                                                  - description: The tree hash merkle root of the `BeaconState` for the `BeaconBlock`.
                                          - type: object
                                            properties:
                                              body_root:
                                                allOf:
                                                  - type: string
                                                    format: hex
                                                    example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                                    pattern: '^0x[a-fA-F0-9]{64}$'
                                                  - description: The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`
                                      signature:
                                        type: string
                                        format: bytes
                                        pattern: '^0x[a-fA-F0-9]{192}$'
                                        example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                                  signed_header_2:
                                    type: object
                                    description: 'The [`SignedBeaconBlockHeader`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the Eth2.0 spec.'
                                    properties:
                                      message:
                                        description: 'The [`BeaconBlockHeader`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the Eth2.0 spec.'
                                        allOf:
                                          - type: object
                                            properties:
                                              slot:
                                                allOf:
                                                  - type: string
                                                    example: '1'
                                                  - description: The slot to which this block corresponds.
                                              proposer_index:
                                                allOf:
                                                  - type: string
                                                    example: '1'
                                                  - description: Index of validator in validator registry.
                                              parent_root:
                                                allOf:
                                                  - type: string
                                                    format: hex
                                                    example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                                    pattern: '^0x[a-fA-F0-9]{64}$'
                                                  - description: The signing merkle root of the parent `BeaconBlock`.
                                              state_root:
                                                allOf:
                                                  - type: string
                                                    format: hex
                                                    example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                                    pattern: '^0x[a-fA-F0-9]{64}$'
                                                  - description: The tree hash merkle root of the `BeaconState` for the `BeaconBlock`.
                                          - type: object
                                            properties:
                                              body_root:
                                                allOf:
                                                  - type: string
                                                    format: hex
                                                    example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                                    pattern: '^0x[a-fA-F0-9]{64}$'
                                                  - description: The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`
                                      signature:
                                        type: string
                                        format: bytes
                                        pattern: '^0x[a-fA-F0-9]{192}$'
                                        example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                            attester_slashings:
                              type: array
                              items:
                                type: object
                                description: 'The [`AttesterSlashing`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/core/0_beacon-chain.md#attesterslashing) object from the Eth2.0 spec.'
                                properties:
                                  attestation_1:
                                    type: object
                                    description: 'The [`IndexedAttestation`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#indexedattestation) object from the Eth2.0 spec.'
                                    properties:
                                      attesting_indices:
                                        type: array
                                        maxItems: 2048
                                        description: Attesting validator indices
                                        items:
                                          type: string
                                          example: '1'
                                      signature:
                                        allOf:
                                          - type: string
                                            format: bytes
                                            pattern: '^0x[a-fA-F0-9]{192}$'
                                            example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                                          - description: 'The BLS signature of the `IndexedAttestation`, created by the validator of the attestation.'
                                      data:
                                        type: object
                                        description: 'The [`AttestationData`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#attestationdata) object from the Eth2.0 spec.'
                                        properties:
                                          slot:
                                            type: string
                                            example: '1'
                                          index:
                                            type: string
                                            example: '1'
                                          beacon_block_root:
                                            allOf:
                                              - type: string
                                                format: hex
                                                example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                                pattern: '^0x[a-fA-F0-9]{64}$'
                                              - description: LMD GHOST vote.
                                          source:
                                            type: object
                                            description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                                            properties:
                                              epoch:
                                                type: string
                                                example: '1'
                                              root:
                                                type: string
                                                format: hex
                                                example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                                pattern: '^0x[a-fA-F0-9]{64}$'
                                          target:
                                            type: object
                                            description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                                            properties:
                                              epoch:
                                                type: string
                                                example: '1'
                                              root:
                                                type: string
                                                format: hex
                                                example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                                pattern: '^0x[a-fA-F0-9]{64}$'
                                  attestation_2:
                                    type: object
                                    description: 'The [`IndexedAttestation`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#indexedattestation) object from the Eth2.0 spec.'
                                    properties:
                                      attesting_indices:
                                        type: array
                                        maxItems: 2048
                                        description: Attesting validator indices
                                        items:
                                          type: string
                                          example: '1'
                                      signature:
                                        allOf:
                                          - type: string
                                            format: bytes
                                            pattern: '^0x[a-fA-F0-9]{192}$'
                                            example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                                          - description: 'The BLS signature of the `IndexedAttestation`, created by the validator of the attestation.'
                                      data:
                                        type: object
                                        description: 'The [`AttestationData`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#attestationdata) object from the Eth2.0 spec.'
                                        properties:
                                          slot:
                                            type: string
                                            example: '1'
                                          index:
                                            type: string
                                            example: '1'
                                          beacon_block_root:
                                            allOf:
                                              - type: string
                                                format: hex
                                                example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                                pattern: '^0x[a-fA-F0-9]{64}$'
                                              - description: LMD GHOST vote.
                                          source:
                                            type: object
                                            description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                                            properties:
                                              epoch:
                                                type: string
                                                example: '1'
                                              root:
                                                type: string
                                                format: hex
                                                example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                                pattern: '^0x[a-fA-F0-9]{64}$'
                                          target:
                                            type: object
                                            description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                                            properties:
                                              epoch:
                                                type: string
                                                example: '1'
                                              root:
                                                type: string
                                                format: hex
                                                example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                                pattern: '^0x[a-fA-F0-9]{64}$'
                            attestations:
                              type: array
                              items:
                                type: object
                                description: 'The [`Attestation`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#attestation) object from the Eth2.0 spec.'
                                properties:
                                  aggregation_bits:
                                    type: string
                                    format: byte
                                    pattern: '^0x[a-fA-F0-9]+$'
                                    description: Attester aggregation bits.
                                  signature:
                                    allOf:
                                      - type: string
                                        format: bytes
                                        pattern: '^0x[a-fA-F0-9]{192}$'
                                        example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                                      - description: BLS aggregate signature.
                                  data:
                                    type: object
                                    description: 'The [`AttestationData`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#attestationdata) object from the Eth2.0 spec.'
                                    properties:
                                      slot:
                                        type: string
                                        example: '1'
                                      index:
                                        type: string
                                        example: '1'
                                      beacon_block_root:
                                        allOf:
                                          - type: string
                                            format: hex
                                            example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                            pattern: '^0x[a-fA-F0-9]{64}$'
                                          - description: LMD GHOST vote.
                                      source:
                                        type: object
                                        description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                                        properties:
                                          epoch:
                                            type: string
                                            example: '1'
                                          root:
                                            type: string
                                            format: hex
                                            example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                            pattern: '^0x[a-fA-F0-9]{64}$'
                                      target:
                                        type: object
                                        description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                                        properties:
                                          epoch:
                                            type: string
                                            example: '1'
                                          root:
                                            type: string
                                            format: hex
                                            example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                            pattern: '^0x[a-fA-F0-9]{64}$'
                            deposits:
                              type: array
                              items:
                                type: object
                                description: 'The [`Deposit`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#deposit) object from the Eth2.0 spec.'
                                properties:
                                  proof:
                                    type: array
                                    description: Branch in the deposit tree.
                                    items:
                                      allOf:
                                        - type: string
                                          format: hex
                                          example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                          pattern: '^0x[a-fA-F0-9]{64}$'
                                    minItems: 32
                                    maxItems: 32
                                  data:
                                    type: object
                                    description: 'The [`DepositData`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#depositdata) object from the Eth2.0 spec.'
                                    properties:
                                      pubkey:
                                        type: string
                                        pattern: '^0x[a-fA-F0-9]{96}$'
                                        description: 'The validator''s BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._'
                                        example: '0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a'
                                      withdrawal_credentials:
                                        allOf:
                                          - type: string
                                            format: hex
                                            example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                            pattern: '^0x[a-fA-F0-9]{64}$'
                                          - description: The withdrawal credentials.
                                      amount:
                                        allOf:
                                          - type: string
                                            example: '1'
                                          - description: Amount in Gwei.
                                      signature:
                                        allOf:
                                          - type: string
                                            format: bytes
                                            pattern: '^0x[a-fA-F0-9]{192}$'
                                            example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                                          - description: Container self-signature.
                            voluntary_exits:
                              type: array
                              items:
                                type: object
                                description: 'The [`VoluntaryExit`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#voluntaryexit) object from the Eth2.0 spec.'
                                properties:
                                  epoch:
                                    allOf:
                                      - type: string
                                        example: '1'
                                      - description: Minimum epoch for processing exit.
                                  validator_index:
                                    allOf:
                                      - type: string
                                        example: '1'
                                      - description: Index of the exiting validator.
                signature:
                  type: string
                  format: bytes
                  pattern: '^0x[a-fA-F0-9]{192}$'
                  example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
      responses:
        '200':
          description: The block was validated successfully and has been broadcast. It has also been integrated into the beacon node's database.
        '202':
          description: 'The block failed validation, but was successfully broadcast anyway. It was not integrated into the beacon node''s database.'
        '400':
          description: Invalid request syntax.
        '500':
          description: Beacon node internal error.
        '503':
          description: 'Beacon node is currently syncing, try again later.'
components:
  schemas:
    BeaconBlock:
      description: 'The [`BeaconBlock`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#beaconblock) object from the Eth2.0 spec.'
      allOf:
        - type: object
          properties:
            slot:
              allOf:
                - type: string
                  example: '1'
                - description: The slot to which this block corresponds.
            proposer_index:
              allOf:
                - type: string
                  example: '1'
                - description: Index of validator in validator registry.
            parent_root:
              allOf:
                - type: string
                  format: hex
                  example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                  pattern: '^0x[a-fA-F0-9]{64}$'
                - description: The signing merkle root of the parent `BeaconBlock`.
            state_root:
              allOf:
                - type: string
                  format: hex
                  example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                  pattern: '^0x[a-fA-F0-9]{64}$'
                - description: The tree hash merkle root of the `BeaconState` for the `BeaconBlock`.
        - type: object
          properties:
            body:
              type: object
              description: 'The [`BeaconBlockBody`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#beaconblockbody) object from the Eth2.0 spec.'
              properties:
                randao_reveal:
                  allOf:
                    - type: string
                      format: bytes
                      pattern: '^0x[a-fA-F0-9]{192}$'
                      example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                    - description: The RanDAO reveal value provided by the validator.
                eth1_data:
                  type: object
                  description: 'The [`Eth1Data`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#eth1data) object from the Eth2.0 spec.'
                  properties:
                    deposit_root:
                      allOf:
                        - type: string
                          format: hex
                          example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                          pattern: '^0x[a-fA-F0-9]{64}$'
                        - description: Root of the deposit tree.
                    deposit_count:
                      allOf:
                        - type: string
                          example: '1'
                        - description: Total number of deposits.
                    block_hash:
                      allOf:
                        - type: string
                          format: hex
                          example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                          pattern: '^0x[a-fA-F0-9]{64}$'
                        - description: Ethereum 1.x block hash.
                graffiti:
                  type: string
                  format: byte
                  pattern: '^0x[a-fA-F0-9]{64}$'
                proposer_slashings:
                  type: array
                  items:
                    type: object
                    description: 'The [`ProposerSlashing`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#proposerslashing) object from the Eth2.0 spec.'
                    properties:
                      signed_header_1:
                        type: object
                        description: 'The [`SignedBeaconBlockHeader`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the Eth2.0 spec.'
                        properties:
                          message:
                            description: 'The [`BeaconBlockHeader`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the Eth2.0 spec.'
                            allOf:
                              - type: object
                                properties:
                                  slot:
                                    allOf:
                                      - type: string
                                        example: '1'
                                      - description: The slot to which this block corresponds.
                                  proposer_index:
                                    allOf:
                                      - type: string
                                        example: '1'
                                      - description: Index of validator in validator registry.
                                  parent_root:
                                    allOf:
                                      - type: string
                                        format: hex
                                        example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                        pattern: '^0x[a-fA-F0-9]{64}$'
                                      - description: The signing merkle root of the parent `BeaconBlock`.
                                  state_root:
                                    allOf:
                                      - type: string
                                        format: hex
                                        example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                        pattern: '^0x[a-fA-F0-9]{64}$'
                                      - description: The tree hash merkle root of the `BeaconState` for the `BeaconBlock`.
                              - type: object
                                properties:
                                  body_root:
                                    allOf:
                                      - type: string
                                        format: hex
                                        example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                        pattern: '^0x[a-fA-F0-9]{64}$'
                                      - description: The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`
                          signature:
                            type: string
                            format: bytes
                            pattern: '^0x[a-fA-F0-9]{192}$'
                            example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                      signed_header_2:
                        type: object
                        description: 'The [`SignedBeaconBlockHeader`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the Eth2.0 spec.'
                        properties:
                          message:
                            description: 'The [`BeaconBlockHeader`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the Eth2.0 spec.'
                            allOf:
                              - type: object
                                properties:
                                  slot:
                                    allOf:
                                      - type: string
                                        example: '1'
                                      - description: The slot to which this block corresponds.
                                  proposer_index:
                                    allOf:
                                      - type: string
                                        example: '1'
                                      - description: Index of validator in validator registry.
                                  parent_root:
                                    allOf:
                                      - type: string
                                        format: hex
                                        example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                        pattern: '^0x[a-fA-F0-9]{64}$'
                                      - description: The signing merkle root of the parent `BeaconBlock`.
                                  state_root:
                                    allOf:
                                      - type: string
                                        format: hex
                                        example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                        pattern: '^0x[a-fA-F0-9]{64}$'
                                      - description: The tree hash merkle root of the `BeaconState` for the `BeaconBlock`.
                              - type: object
                                properties:
                                  body_root:
                                    allOf:
                                      - type: string
                                        format: hex
                                        example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                        pattern: '^0x[a-fA-F0-9]{64}$'
                                      - description: The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`
                          signature:
                            type: string
                            format: bytes
                            pattern: '^0x[a-fA-F0-9]{192}$'
                            example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                attester_slashings:
                  type: array
                  items:
                    type: object
                    description: 'The [`AttesterSlashing`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/core/0_beacon-chain.md#attesterslashing) object from the Eth2.0 spec.'
                    properties:
                      attestation_1:
                        type: object
                        description: 'The [`IndexedAttestation`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#indexedattestation) object from the Eth2.0 spec.'
                        properties:
                          attesting_indices:
                            type: array
                            maxItems: 2048
                            description: Attesting validator indices
                            items:
                              type: string
                              example: '1'
                          signature:
                            allOf:
                              - type: string
                                format: bytes
                                pattern: '^0x[a-fA-F0-9]{192}$'
                                example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                              - description: 'The BLS signature of the `IndexedAttestation`, created by the validator of the attestation.'
                          data:
                            type: object
                            description: 'The [`AttestationData`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#attestationdata) object from the Eth2.0 spec.'
                            properties:
                              slot:
                                type: string
                                example: '1'
                              index:
                                type: string
                                example: '1'
                              beacon_block_root:
                                allOf:
                                  - type: string
                                    format: hex
                                    example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                    pattern: '^0x[a-fA-F0-9]{64}$'
                                  - description: LMD GHOST vote.
                              source:
                                type: object
                                description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                                properties:
                                  epoch:
                                    type: string
                                    example: '1'
                                  root:
                                    type: string
                                    format: hex
                                    example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                    pattern: '^0x[a-fA-F0-9]{64}$'
                              target:
                                type: object
                                description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                                properties:
                                  epoch:
                                    type: string
                                    example: '1'
                                  root:
                                    type: string
                                    format: hex
                                    example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                    pattern: '^0x[a-fA-F0-9]{64}$'
                      attestation_2:
                        type: object
                        description: 'The [`IndexedAttestation`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#indexedattestation) object from the Eth2.0 spec.'
                        properties:
                          attesting_indices:
                            type: array
                            maxItems: 2048
                            description: Attesting validator indices
                            items:
                              type: string
                              example: '1'
                          signature:
                            allOf:
                              - type: string
                                format: bytes
                                pattern: '^0x[a-fA-F0-9]{192}$'
                                example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                              - description: 'The BLS signature of the `IndexedAttestation`, created by the validator of the attestation.'
                          data:
                            type: object
                            description: 'The [`AttestationData`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#attestationdata) object from the Eth2.0 spec.'
                            properties:
                              slot:
                                type: string
                                example: '1'
                              index:
                                type: string
                                example: '1'
                              beacon_block_root:
                                allOf:
                                  - type: string
                                    format: hex
                                    example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                    pattern: '^0x[a-fA-F0-9]{64}$'
                                  - description: LMD GHOST vote.
                              source:
                                type: object
                                description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                                properties:
                                  epoch:
                                    type: string
                                    example: '1'
                                  root:
                                    type: string
                                    format: hex
                                    example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                    pattern: '^0x[a-fA-F0-9]{64}$'
                              target:
                                type: object
                                description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                                properties:
                                  epoch:
                                    type: string
                                    example: '1'
                                  root:
                                    type: string
                                    format: hex
                                    example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                    pattern: '^0x[a-fA-F0-9]{64}$'
                attestations:
                  type: array
                  items:
                    type: object
                    description: 'The [`Attestation`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#attestation) object from the Eth2.0 spec.'
                    properties:
                      aggregation_bits:
                        type: string
                        format: byte
                        pattern: '^0x[a-fA-F0-9]+$'
                        description: Attester aggregation bits.
                      signature:
                        allOf:
                          - type: string
                            format: bytes
                            pattern: '^0x[a-fA-F0-9]{192}$'
                            example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                          - description: BLS aggregate signature.
                      data:
                        type: object
                        description: 'The [`AttestationData`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#attestationdata) object from the Eth2.0 spec.'
                        properties:
                          slot:
                            type: string
                            example: '1'
                          index:
                            type: string
                            example: '1'
                          beacon_block_root:
                            allOf:
                              - type: string
                                format: hex
                                example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                pattern: '^0x[a-fA-F0-9]{64}$'
                              - description: LMD GHOST vote.
                          source:
                            type: object
                            description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                            properties:
                              epoch:
                                type: string
                                example: '1'
                              root:
                                type: string
                                format: hex
                                example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                pattern: '^0x[a-fA-F0-9]{64}$'
                          target:
                            type: object
                            description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                            properties:
                              epoch:
                                type: string
                                example: '1'
                              root:
                                type: string
                                format: hex
                                example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                pattern: '^0x[a-fA-F0-9]{64}$'
                deposits:
                  type: array
                  items:
                    type: object
                    description: 'The [`Deposit`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#deposit) object from the Eth2.0 spec.'
                    properties:
                      proof:
                        type: array
                        description: Branch in the deposit tree.
                        items:
                          allOf:
                            - type: string
                              format: hex
                              example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                              pattern: '^0x[a-fA-F0-9]{64}$'
                        minItems: 32
                        maxItems: 32
                      data:
                        type: object
                        description: 'The [`DepositData`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#depositdata) object from the Eth2.0 spec.'
                        properties:
                          pubkey:
                            type: string
                            pattern: '^0x[a-fA-F0-9]{96}$'
                            description: 'The validator''s BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._'
                            example: '0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a'
                          withdrawal_credentials:
                            allOf:
                              - type: string
                                format: hex
                                example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                pattern: '^0x[a-fA-F0-9]{64}$'
                              - description: The withdrawal credentials.
                          amount:
                            allOf:
                              - type: string
                                example: '1'
                              - description: Amount in Gwei.
                          signature:
                            allOf:
                              - type: string
                                format: bytes
                                pattern: '^0x[a-fA-F0-9]{192}$'
                                example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                              - description: Container self-signature.
                voluntary_exits:
                  type: array
                  items:
                    type: object
                    description: 'The [`VoluntaryExit`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#voluntaryexit) object from the Eth2.0 spec.'
                    properties:
                      epoch:
                        allOf:
                          - type: string
                            example: '1'
                          - description: Minimum epoch for processing exit.
                      validator_index:
                        allOf:
                          - type: string
                            example: '1'
                          - description: Index of the exiting validator.
    SignedBeaconBlock:
      type: object
      description: 'The [`SignedBeaconBlock`](https://github.com/ethereum/eth2.0-specs/blob/v0.10.1/specs/phase0/beacon-chain.md#signedbeaconblock) object envelope from the Eth2.0 spec.'
      properties:
        message:
          description: 'The [`BeaconBlock`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#beaconblock) object from the Eth2.0 spec.'
          allOf:
            - type: object
              properties:
                slot:
                  allOf:
                    - type: string
                      example: '1'
                    - description: The slot to which this block corresponds.
                proposer_index:
                  allOf:
                    - type: string
                      example: '1'
                    - description: Index of validator in validator registry.
                parent_root:
                  allOf:
                    - type: string
                      format: hex
                      example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                      pattern: '^0x[a-fA-F0-9]{64}$'
                    - description: The signing merkle root of the parent `BeaconBlock`.
                state_root:
                  allOf:
                    - type: string
                      format: hex
                      example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                      pattern: '^0x[a-fA-F0-9]{64}$'
                    - description: The tree hash merkle root of the `BeaconState` for the `BeaconBlock`.
            - type: object
              properties:
                body:
                  type: object
                  description: 'The [`BeaconBlockBody`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#beaconblockbody) object from the Eth2.0 spec.'
                  properties:
                    randao_reveal:
                      allOf:
                        - type: string
                          format: bytes
                          pattern: '^0x[a-fA-F0-9]{192}$'
                          example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                        - description: The RanDAO reveal value provided by the validator.
                    eth1_data:
                      type: object
                      description: 'The [`Eth1Data`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#eth1data) object from the Eth2.0 spec.'
                      properties:
                        deposit_root:
                          allOf:
                            - type: string
                              format: hex
                              example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                              pattern: '^0x[a-fA-F0-9]{64}$'
                            - description: Root of the deposit tree.
                        deposit_count:
                          allOf:
                            - type: string
                              example: '1'
                            - description: Total number of deposits.
                        block_hash:
                          allOf:
                            - type: string
                              format: hex
                              example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                              pattern: '^0x[a-fA-F0-9]{64}$'
                            - description: Ethereum 1.x block hash.
                    graffiti:
                      type: string
                      format: byte
                      pattern: '^0x[a-fA-F0-9]{64}$'
                    proposer_slashings:
                      type: array
                      items:
                        type: object
                        description: 'The [`ProposerSlashing`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#proposerslashing) object from the Eth2.0 spec.'
                        properties:
                          signed_header_1:
                            type: object
                            description: 'The [`SignedBeaconBlockHeader`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the Eth2.0 spec.'
                            properties:
                              message:
                                description: 'The [`BeaconBlockHeader`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the Eth2.0 spec.'
                                allOf:
                                  - type: object
                                    properties:
                                      slot:
                                        allOf:
                                          - type: string
                                            example: '1'
                                          - description: The slot to which this block corresponds.
                                      proposer_index:
                                        allOf:
                                          - type: string
                                            example: '1'
                                          - description: Index of validator in validator registry.
                                      parent_root:
                                        allOf:
                                          - type: string
                                            format: hex
                                            example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                            pattern: '^0x[a-fA-F0-9]{64}$'
                                          - description: The signing merkle root of the parent `BeaconBlock`.
                                      state_root:
                                        allOf:
                                          - type: string
                                            format: hex
                                            example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                            pattern: '^0x[a-fA-F0-9]{64}$'
                                          - description: The tree hash merkle root of the `BeaconState` for the `BeaconBlock`.
                                  - type: object
                                    properties:
                                      body_root:
                                        allOf:
                                          - type: string
                                            format: hex
                                            example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                            pattern: '^0x[a-fA-F0-9]{64}$'
                                          - description: The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`
                              signature:
                                type: string
                                format: bytes
                                pattern: '^0x[a-fA-F0-9]{192}$'
                                example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                          signed_header_2:
                            type: object
                            description: 'The [`SignedBeaconBlockHeader`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the Eth2.0 spec.'
                            properties:
                              message:
                                description: 'The [`BeaconBlockHeader`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the Eth2.0 spec.'
                                allOf:
                                  - type: object
                                    properties:
                                      slot:
                                        allOf:
                                          - type: string
                                            example: '1'
                                          - description: The slot to which this block corresponds.
                                      proposer_index:
                                        allOf:
                                          - type: string
                                            example: '1'
                                          - description: Index of validator in validator registry.
                                      parent_root:
                                        allOf:
                                          - type: string
                                            format: hex
                                            example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                            pattern: '^0x[a-fA-F0-9]{64}$'
                                          - description: The signing merkle root of the parent `BeaconBlock`.
                                      state_root:
                                        allOf:
                                          - type: string
                                            format: hex
                                            example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                            pattern: '^0x[a-fA-F0-9]{64}$'
                                          - description: The tree hash merkle root of the `BeaconState` for the `BeaconBlock`.
                                  - type: object
                                    properties:
                                      body_root:
                                        allOf:
                                          - type: string
                                            format: hex
                                            example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                            pattern: '^0x[a-fA-F0-9]{64}$'
                                          - description: The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`
                              signature:
                                type: string
                                format: bytes
                                pattern: '^0x[a-fA-F0-9]{192}$'
                                example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                    attester_slashings:
                      type: array
                      items:
                        type: object
                        description: 'The [`AttesterSlashing`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/core/0_beacon-chain.md#attesterslashing) object from the Eth2.0 spec.'
                        properties:
                          attestation_1:
                            type: object
                            description: 'The [`IndexedAttestation`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#indexedattestation) object from the Eth2.0 spec.'
                            properties:
                              attesting_indices:
                                type: array
                                maxItems: 2048
                                description: Attesting validator indices
                                items:
                                  type: string
                                  example: '1'
                              signature:
                                allOf:
                                  - type: string
                                    format: bytes
                                    pattern: '^0x[a-fA-F0-9]{192}$'
                                    example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                                  - description: 'The BLS signature of the `IndexedAttestation`, created by the validator of the attestation.'
                              data:
                                type: object
                                description: 'The [`AttestationData`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#attestationdata) object from the Eth2.0 spec.'
                                properties:
                                  slot:
                                    type: string
                                    example: '1'
                                  index:
                                    type: string
                                    example: '1'
                                  beacon_block_root:
                                    allOf:
                                      - type: string
                                        format: hex
                                        example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                        pattern: '^0x[a-fA-F0-9]{64}$'
                                      - description: LMD GHOST vote.
                                  source:
                                    type: object
                                    description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                                    properties:
                                      epoch:
                                        type: string
                                        example: '1'
                                      root:
                                        type: string
                                        format: hex
                                        example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                        pattern: '^0x[a-fA-F0-9]{64}$'
                                  target:
                                    type: object
                                    description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                                    properties:
                                      epoch:
                                        type: string
                                        example: '1'
                                      root:
                                        type: string
                                        format: hex
                                        example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                        pattern: '^0x[a-fA-F0-9]{64}$'
                          attestation_2:
                            type: object
                            description: 'The [`IndexedAttestation`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#indexedattestation) object from the Eth2.0 spec.'
                            properties:
                              attesting_indices:
                                type: array
                                maxItems: 2048
                                description: Attesting validator indices
                                items:
                                  type: string
                                  example: '1'
                              signature:
                                allOf:
                                  - type: string
                                    format: bytes
                                    pattern: '^0x[a-fA-F0-9]{192}$'
                                    example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                                  - description: 'The BLS signature of the `IndexedAttestation`, created by the validator of the attestation.'
                              data:
                                type: object
                                description: 'The [`AttestationData`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#attestationdata) object from the Eth2.0 spec.'
                                properties:
                                  slot:
                                    type: string
                                    example: '1'
                                  index:
                                    type: string
                                    example: '1'
                                  beacon_block_root:
                                    allOf:
                                      - type: string
                                        format: hex
                                        example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                        pattern: '^0x[a-fA-F0-9]{64}$'
                                      - description: LMD GHOST vote.
                                  source:
                                    type: object
                                    description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                                    properties:
                                      epoch:
                                        type: string
                                        example: '1'
                                      root:
                                        type: string
                                        format: hex
                                        example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                        pattern: '^0x[a-fA-F0-9]{64}$'
                                  target:
                                    type: object
                                    description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                                    properties:
                                      epoch:
                                        type: string
                                        example: '1'
                                      root:
                                        type: string
                                        format: hex
                                        example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                        pattern: '^0x[a-fA-F0-9]{64}$'
                    attestations:
                      type: array
                      items:
                        type: object
                        description: 'The [`Attestation`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#attestation) object from the Eth2.0 spec.'
                        properties:
                          aggregation_bits:
                            type: string
                            format: byte
                            pattern: '^0x[a-fA-F0-9]+$'
                            description: Attester aggregation bits.
                          signature:
                            allOf:
                              - type: string
                                format: bytes
                                pattern: '^0x[a-fA-F0-9]{192}$'
                                example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                              - description: BLS aggregate signature.
                          data:
                            type: object
                            description: 'The [`AttestationData`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#attestationdata) object from the Eth2.0 spec.'
                            properties:
                              slot:
                                type: string
                                example: '1'
                              index:
                                type: string
                                example: '1'
                              beacon_block_root:
                                allOf:
                                  - type: string
                                    format: hex
                                    example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                    pattern: '^0x[a-fA-F0-9]{64}$'
                                  - description: LMD GHOST vote.
                              source:
                                type: object
                                description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                                properties:
                                  epoch:
                                    type: string
                                    example: '1'
                                  root:
                                    type: string
                                    format: hex
                                    example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                    pattern: '^0x[a-fA-F0-9]{64}$'
                              target:
                                type: object
                                description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                                properties:
                                  epoch:
                                    type: string
                                    example: '1'
                                  root:
                                    type: string
                                    format: hex
                                    example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                    pattern: '^0x[a-fA-F0-9]{64}$'
                    deposits:
                      type: array
                      items:
                        type: object
                        description: 'The [`Deposit`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#deposit) object from the Eth2.0 spec.'
                        properties:
                          proof:
                            type: array
                            description: Branch in the deposit tree.
                            items:
                              allOf:
                                - type: string
                                  format: hex
                                  example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                  pattern: '^0x[a-fA-F0-9]{64}$'
                            minItems: 32
                            maxItems: 32
                          data:
                            type: object
                            description: 'The [`DepositData`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#depositdata) object from the Eth2.0 spec.'
                            properties:
                              pubkey:
                                type: string
                                pattern: '^0x[a-fA-F0-9]{96}$'
                                description: 'The validator''s BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._'
                                example: '0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a'
                              withdrawal_credentials:
                                allOf:
                                  - type: string
                                    format: hex
                                    example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                                    pattern: '^0x[a-fA-F0-9]{64}$'
                                  - description: The withdrawal credentials.
                              amount:
                                allOf:
                                  - type: string
                                    example: '1'
                                  - description: Amount in Gwei.
                              signature:
                                allOf:
                                  - type: string
                                    format: bytes
                                    pattern: '^0x[a-fA-F0-9]{192}$'
                                    example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                                  - description: Container self-signature.
                    voluntary_exits:
                      type: array
                      items:
                        type: object
                        description: 'The [`VoluntaryExit`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#voluntaryexit) object from the Eth2.0 spec.'
                        properties:
                          epoch:
                            allOf:
                              - type: string
                                example: '1'
                              - description: Minimum epoch for processing exit.
                          validator_index:
                            allOf:
                              - type: string
                                example: '1'
                              - description: Index of the exiting validator.
        signature:
          type: string
          format: bytes
          pattern: '^0x[a-fA-F0-9]{192}$'
          example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
    SignedBeaconBlockHeader:
      type: object
      description: 'The [`SignedBeaconBlockHeader`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the Eth2.0 spec.'
      properties:
        message:
          description: 'The [`BeaconBlockHeader`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the Eth2.0 spec.'
          allOf:
            - type: object
              properties:
                slot:
                  allOf:
                    - type: string
                      example: '1'
                    - description: The slot to which this block corresponds.
                proposer_index:
                  allOf:
                    - type: string
                      example: '1'
                    - description: Index of validator in validator registry.
                parent_root:
                  allOf:
                    - type: string
                      format: hex
                      example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                      pattern: '^0x[a-fA-F0-9]{64}$'
                    - description: The signing merkle root of the parent `BeaconBlock`.
                state_root:
                  allOf:
                    - type: string
                      format: hex
                      example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                      pattern: '^0x[a-fA-F0-9]{64}$'
                    - description: The tree hash merkle root of the `BeaconState` for the `BeaconBlock`.
            - type: object
              properties:
                body_root:
                  allOf:
                    - type: string
                      format: hex
                      example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                      pattern: '^0x[a-fA-F0-9]{64}$'
                    - description: The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`
        signature:
          type: string
          format: bytes
          pattern: '^0x[a-fA-F0-9]{192}$'
          example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
    ValidatorResponse:
      type: object
      properties:
        index:
          allOf:
            - type: string
              example: '1'
            - description: Index of validator in validator registry.
        balance:
          allOf:
            - type: string
              example: '1'
            - description: Current validator balance in gwei.
        status:
          description: |
            Possible statuses:
            - **pending_initialized** - When the first deposit is processed, but not enough funds are available (or not yet the end of the first epoch) to get validator into the activation queue.
            - **pending_queued** - When validator is waiting to get activated, and have enough funds etc. while in the queue, validator activation epoch keeps changing until it gets to the front and make it through (finalization is a requirement here too).
            - **active_ongoing** - When validator must be attesting, and have not initiated any exit.
            - **active_exiting** - When validator is still active, but filed a voluntary request to exit.
            - **active_slashed** - When validator is still active, but have a slashed status and is scheduled to exit.
            - **exited_unslashed** - When validator has reached reguler exit epoch, not being slashed, and doesn't have to attest any more, but cannot withdraw yet.
            - **exited_slashed** - When validator has reached reguler exit epoch, but was slashed, have to wait for a longer withdrawal period.
            - **withdrawal_possible** - After validator has exited, a while later is permitted to move funds, and is truly out of the system.
            - **withdrawal_done** - (not possible in phase0, except slashing full balance) - actually having moved funds away

            [Validator status specification](https://hackmd.io/ofFJ5gOmQpu1jjHilHbdQQ)
          enum:
            - pending_initialized
            - pending_queued
            - active_ongoing
            - active_exiting
            - active_slashed
            - exited_unslashed
            - exited_slashed
            - withdrawal_possible
            - withdrawal_done
          example: active_ongoing
        validator:
          type: object
          properties:
            pubkey:
              type: string
              pattern: '^0x[a-fA-F0-9]{96}$'
              description: 'The validator''s BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._'
              example: '0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a'
            withdrawal_credentials:
              allOf:
                - type: string
                  format: hex
                  example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                  pattern: '^0x[a-fA-F0-9]{64}$'
                - description: Root of withdrawal credentials
            effective_balance:
              allOf:
                - type: string
                  example: '1'
                - description: Balance at stake in Gwei.
            slashed:
              type: boolean
              example: false
              description: Was validator slashed (not longer active).
            activation_eligibility_epoch:
              allOf:
                - type: string
                  example: '1'
                - description: When criteria for activation were met.
            activation_epoch:
              allOf:
                - type: string
                  example: '1'
                - description: Epoch when validator activated. 'FAR_FUTURE_EPOCH' if not activated
            exit_epoch:
              allOf:
                - type: string
                  example: '1'
                - description: Epoch when validator exited. 'FAR_FUTURE_EPOCH' if not exited.
            withdrawable_epoch:
              allOf:
                - type: string
                  example: '1'
                - description: When validator can withdraw or transfer funds. 'FAR_FUTURE_EPOCH' if not defined
    ValidatorStatus:
      description: |
        Possible statuses:
        - **pending_initialized** - When the first deposit is processed, but not enough funds are available (or not yet the end of the first epoch) to get validator into the activation queue.
        - **pending_queued** - When validator is waiting to get activated, and have enough funds etc. while in the queue, validator activation epoch keeps changing until it gets to the front and make it through (finalization is a requirement here too).
        - **active_ongoing** - When validator must be attesting, and have not initiated any exit.
        - **active_exiting** - When validator is still active, but filed a voluntary request to exit.
        - **active_slashed** - When validator is still active, but have a slashed status and is scheduled to exit.
        - **exited_unslashed** - When validator has reached reguler exit epoch, not being slashed, and doesn't have to attest any more, but cannot withdraw yet.
        - **exited_slashed** - When validator has reached reguler exit epoch, but was slashed, have to wait for a longer withdrawal period.
        - **withdrawal_possible** - After validator has exited, a while later is permitted to move funds, and is truly out of the system.
        - **withdrawal_done** - (not possible in phase0, except slashing full balance) - actually having moved funds away

        [Validator status specification](https://hackmd.io/ofFJ5gOmQpu1jjHilHbdQQ)
      enum:
        - pending_initialized
        - pending_queued
        - active_ongoing
        - active_exiting
        - active_slashed
        - exited_unslashed
        - exited_slashed
        - withdrawal_possible
        - withdrawal_done
      example: active_ongoing
    Committee:
      description: Group of validators assigned to attest at specific slot and that have the same committee index (shard in phase 1)
      type: object
      properties:
        index:
          allOf:
            - type: string
              example: '1'
            - description: Committee index at a slot
        slot:
          type: string
          example: '1'
        validators:
          type: array
          description: List of validator indices assigned to this committee
          items:
            type: string
            example: '1'
    AttesterSlashing:
      type: object
      description: 'The [`AttesterSlashing`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/core/0_beacon-chain.md#attesterslashing) object from the Eth2.0 spec.'
      properties:
        attestation_1:
          type: object
          description: 'The [`IndexedAttestation`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#indexedattestation) object from the Eth2.0 spec.'
          properties:
            attesting_indices:
              type: array
              maxItems: 2048
              description: Attesting validator indices
              items:
                type: string
                example: '1'
            signature:
              allOf:
                - type: string
                  format: bytes
                  pattern: '^0x[a-fA-F0-9]{192}$'
                  example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                - description: 'The BLS signature of the `IndexedAttestation`, created by the validator of the attestation.'
            data:
              type: object
              description: 'The [`AttestationData`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#attestationdata) object from the Eth2.0 spec.'
              properties:
                slot:
                  type: string
                  example: '1'
                index:
                  type: string
                  example: '1'
                beacon_block_root:
                  allOf:
                    - type: string
                      format: hex
                      example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                      pattern: '^0x[a-fA-F0-9]{64}$'
                    - description: LMD GHOST vote.
                source:
                  type: object
                  description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                  properties:
                    epoch:
                      type: string
                      example: '1'
                    root:
                      type: string
                      format: hex
                      example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                      pattern: '^0x[a-fA-F0-9]{64}$'
                target:
                  type: object
                  description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                  properties:
                    epoch:
                      type: string
                      example: '1'
                    root:
                      type: string
                      format: hex
                      example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                      pattern: '^0x[a-fA-F0-9]{64}$'
        attestation_2:
          type: object
          description: 'The [`IndexedAttestation`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#indexedattestation) object from the Eth2.0 spec.'
          properties:
            attesting_indices:
              type: array
              maxItems: 2048
              description: Attesting validator indices
              items:
                type: string
                example: '1'
            signature:
              allOf:
                - type: string
                  format: bytes
                  pattern: '^0x[a-fA-F0-9]{192}$'
                  example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                - description: 'The BLS signature of the `IndexedAttestation`, created by the validator of the attestation.'
            data:
              type: object
              description: 'The [`AttestationData`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#attestationdata) object from the Eth2.0 spec.'
              properties:
                slot:
                  type: string
                  example: '1'
                index:
                  type: string
                  example: '1'
                beacon_block_root:
                  allOf:
                    - type: string
                      format: hex
                      example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                      pattern: '^0x[a-fA-F0-9]{64}$'
                    - description: LMD GHOST vote.
                source:
                  type: object
                  description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                  properties:
                    epoch:
                      type: string
                      example: '1'
                    root:
                      type: string
                      format: hex
                      example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                      pattern: '^0x[a-fA-F0-9]{64}$'
                target:
                  type: object
                  description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                  properties:
                    epoch:
                      type: string
                      example: '1'
                    root:
                      type: string
                      format: hex
                      example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                      pattern: '^0x[a-fA-F0-9]{64}$'
    ProposerSlashing:
      type: object
      description: 'The [`ProposerSlashing`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#proposerslashing) object from the Eth2.0 spec.'
      properties:
        signed_header_1:
          type: object
          description: 'The [`SignedBeaconBlockHeader`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the Eth2.0 spec.'
          properties:
            message:
              description: 'The [`BeaconBlockHeader`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the Eth2.0 spec.'
              allOf:
                - type: object
                  properties:
                    slot:
                      allOf:
                        - type: string
                          example: '1'
                        - description: The slot to which this block corresponds.
                    proposer_index:
                      allOf:
                        - type: string
                          example: '1'
                        - description: Index of validator in validator registry.
                    parent_root:
                      allOf:
                        - type: string
                          format: hex
                          example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                          pattern: '^0x[a-fA-F0-9]{64}$'
                        - description: The signing merkle root of the parent `BeaconBlock`.
                    state_root:
                      allOf:
                        - type: string
                          format: hex
                          example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                          pattern: '^0x[a-fA-F0-9]{64}$'
                        - description: The tree hash merkle root of the `BeaconState` for the `BeaconBlock`.
                - type: object
                  properties:
                    body_root:
                      allOf:
                        - type: string
                          format: hex
                          example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                          pattern: '^0x[a-fA-F0-9]{64}$'
                        - description: The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`
            signature:
              type: string
              format: bytes
              pattern: '^0x[a-fA-F0-9]{192}$'
              example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
        signed_header_2:
          type: object
          description: 'The [`SignedBeaconBlockHeader`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the Eth2.0 spec.'
          properties:
            message:
              description: 'The [`BeaconBlockHeader`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the Eth2.0 spec.'
              allOf:
                - type: object
                  properties:
                    slot:
                      allOf:
                        - type: string
                          example: '1'
                        - description: The slot to which this block corresponds.
                    proposer_index:
                      allOf:
                        - type: string
                          example: '1'
                        - description: Index of validator in validator registry.
                    parent_root:
                      allOf:
                        - type: string
                          format: hex
                          example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                          pattern: '^0x[a-fA-F0-9]{64}$'
                        - description: The signing merkle root of the parent `BeaconBlock`.
                    state_root:
                      allOf:
                        - type: string
                          format: hex
                          example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                          pattern: '^0x[a-fA-F0-9]{64}$'
                        - description: The tree hash merkle root of the `BeaconState` for the `BeaconBlock`.
                - type: object
                  properties:
                    body_root:
                      allOf:
                        - type: string
                          format: hex
                          example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                          pattern: '^0x[a-fA-F0-9]{64}$'
                        - description: The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`
            signature:
              type: string
              format: bytes
              pattern: '^0x[a-fA-F0-9]{192}$'
              example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
    SignedVoluntaryExit:
      type: object
      description: 'The [`SignedVoluntaryExit`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the Eth2.0 spec.'
      properties:
        message:
          type: object
          description: 'The [`VoluntaryExit`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#voluntaryexit) object from the Eth2.0 spec.'
          properties:
            epoch:
              allOf:
                - type: string
                  example: '1'
                - description: Minimum epoch for processing exit.
            validator_index:
              allOf:
                - type: string
                  example: '1'
                - description: Index of the exiting validator.
        signature:
          type: string
          format: bytes
          pattern: '^0x[a-fA-F0-9]{192}$'
          example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
    AttesterDuty:
      type: object
      properties:
        validator_pubkey:
          type: string
          pattern: '^0x[a-fA-F0-9]{96}$'
          description: 'The validator''s BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._'
          example: '0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a'
        aggregator_modulo:
          allOf:
            - type: string
              example: '1'
            - description: 'Value which validator can use to calculate is_aggregator (aka bytes_to_int(hash(slot_signature)[0:8]) % aggregator_modulo == 0)'
        attestation_slot:
          allOf:
            - type: string
              example: '1'
            - description: The slot at which the validator must attest.
        committee_index:
          allOf:
            - type: string
              example: '1'
            - description: The committee index
    SignedAggregateAndProof:
      properties:
        message:
          allOf:
            - type: object
              description: 'The [`AggregateAndProof`](https://github.com/ethereum/eth2.0-specs/blob/v0.9.2/specs/validator/0_beacon-chain-validator.md#aggregateandproof) without selection_proof'
              properties:
                aggregator_index:
                  type: string
                  example: '1'
                attestation:
                  type: object
                  description: 'The [`Attestation`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#attestation) object from the Eth2.0 spec.'
                  properties:
                    aggregation_bits:
                      type: string
                      format: byte
                      pattern: '^0x[a-fA-F0-9]+$'
                      description: Attester aggregation bits.
                    signature:
                      allOf:
                        - type: string
                          format: bytes
                          pattern: '^0x[a-fA-F0-9]{192}$'
                          example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
                        - description: BLS aggregate signature.
                    data:
                      type: object
                      description: 'The [`AttestationData`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#attestationdata) object from the Eth2.0 spec.'
                      properties:
                        slot:
                          type: string
                          example: '1'
                        index:
                          type: string
                          example: '1'
                        beacon_block_root:
                          allOf:
                            - type: string
                              format: hex
                              example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                              pattern: '^0x[a-fA-F0-9]{64}$'
                            - description: LMD GHOST vote.
                        source:
                          type: object
                          description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                          properties:
                            epoch:
                              type: string
                              example: '1'
                            root:
                              type: string
                              format: hex
                              example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                              pattern: '^0x[a-fA-F0-9]{64}$'
                        target:
                          type: object
                          description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
                          properties:
                            epoch:
                              type: string
                              example: '1'
                            root:
                              type: string
                              format: hex
                              example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                              pattern: '^0x[a-fA-F0-9]{64}$'
            - type: object
              properties:
                selection_proof:
                  type: string
                  format: bytes
                  pattern: '^0x[a-fA-F0-9]{192}$'
                  example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
        signature:
          type: string
          format: bytes
          pattern: '^0x[a-fA-F0-9]{192}$'
          example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
    Attestation:
      type: object
      description: 'The [`Attestation`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#attestation) object from the Eth2.0 spec.'
      properties:
        aggregation_bits:
          type: string
          format: byte
          pattern: '^0x[a-fA-F0-9]+$'
          description: Attester aggregation bits.
        signature:
          allOf:
            - type: string
              format: bytes
              pattern: '^0x[a-fA-F0-9]{192}$'
              example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
            - description: BLS aggregate signature.
        data:
          type: object
          description: 'The [`AttestationData`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#attestationdata) object from the Eth2.0 spec.'
          properties:
            slot:
              type: string
              example: '1'
            index:
              type: string
              example: '1'
            beacon_block_root:
              allOf:
                - type: string
                  format: hex
                  example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                  pattern: '^0x[a-fA-F0-9]{64}$'
                - description: LMD GHOST vote.
            source:
              type: object
              description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
              properties:
                epoch:
                  type: string
                  example: '1'
                root:
                  type: string
                  format: hex
                  example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                  pattern: '^0x[a-fA-F0-9]{64}$'
            target:
              type: object
              description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
              properties:
                epoch:
                  type: string
                  example: '1'
                root:
                  type: string
                  format: hex
                  example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
                  pattern: '^0x[a-fA-F0-9]{64}$'
    Fork:
      type: object
      description: 'The [`Fork`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#fork) object from the Eth2.0 spec.'
      properties:
        previous_version:
          type: string
          description: a fork version number
          example: '0x00000000'
          pattern: '^0x[a-fA-F0-9]{8}$'
        current_version:
          type: string
          description: a fork version number
          example: '0x00000000'
          pattern: '^0x[a-fA-F0-9]{8}$'
        epoch:
          type: string
          example: '1'
    Checkpoint:
      type: object
      description: 'The [`Checkpoint`](https://github.com/ethereum/eth2.0-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#checkpoint'
      properties:
        epoch:
          type: string
          example: '1'
        root:
          type: string
          format: hex
          example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
          pattern: '^0x[a-fA-F0-9]{64}$'
    PublicKey:
      type: string
      pattern: '^0x[a-fA-F0-9]{96}$'
      description: 'The validator''s BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._'
      example: '0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a'
    Uint64:
      type: string
      example: '1'
    NetworkIdentity:
      type: object
      properties:
        peer_id:
          type: string
          description: 'Cryptographic hash of a peer’s public key. [Read more](https://docs.libp2p.io/concepts/peer-id/)'
          example: QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N
        enr:
          type: string
          description: 'Ethereum node record. [Read more](https://eips.ethereum.org/EIPS/eip-778)'
          example: 'enr:-IS4QHCYrYZbAKWCBRlAy5zzaDZXJBGkcnh4MHcBFZntXNFrdvJjX04jRzjzCBOonrkTfj499SZuOh8R33Ls8RRcy5wBgmlkgnY0gmlwhH8AAAGJc2VjcDI1NmsxoQPKY0yuDUmstAHYpMa2_oxVtw0RW_QAdpzBQA8yWM0xOIN1ZHCCdl8'
        p2p_addresses:
          type: array
          items:
            allOf:
              - type: string
                description: '[Read more](https://docs.libp2p.io/reference/glossary/#multiaddr)'
                example: /ip4/7.7.7.7/tcp/4242/p2p/QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N
              - description: 'Node''s addresses on which eth2 rpc requests are served. [Read more](https://docs.libp2p.io/reference/glossary/#multiaddr)'
        discovery_addresses:
          type: array
          items:
            allOf:
              - type: string
                description: '[Read more](https://docs.libp2p.io/reference/glossary/#multiaddr)'
                example: /ip4/7.7.7.7/tcp/4242/p2p/QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N
              - description: 'Node''s addresses on which is listening for discv5 requests. [Read more](https://docs.libp2p.io/reference/glossary/#multiaddr)'
        metadata:
          type: object
          description: 'Based on eth2 [Metadata object](https://github.com/ethereum/eth2.0-specs/blob/v0.12.0/specs/phase0/p2p-interface.md#metadata)'
          properties:
            seq_number:
              allOf:
                - description: 'Uint64 starting at 0 used to version the node''s metadata. If any other field in the local MetaData changes, the node MUST increment seq_number by 1.'
                - type: string
                  example: '1'
            attnets:
              allOf:
                - description: Bitvector representing the node's persistent attestation subnet subscriptions.
                - type: string
                  format: hex
                  pattern: '^0x[a-fA-F0-9]{2,}$'
    Peer:
      type: object
      properties:
        peer_id:
          type: string
          description: 'Cryptographic hash of a peer’s public key. [Read more](https://docs.libp2p.io/concepts/peer-id/)'
          example: QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N
        enr:
          type: string
          description: 'Ethereum node record. [Read more](https://eips.ethereum.org/EIPS/eip-778)'
          example: 'enr:-IS4QHCYrYZbAKWCBRlAy5zzaDZXJBGkcnh4MHcBFZntXNFrdvJjX04jRzjzCBOonrkTfj499SZuOh8R33Ls8RRcy5wBgmlkgnY0gmlwhH8AAAGJc2VjcDI1NmsxoQPKY0yuDUmstAHYpMa2_oxVtw0RW_QAdpzBQA8yWM0xOIN1ZHCCdl8'
        address:
          type: string
          description: '[Read more](https://docs.libp2p.io/reference/glossary/#multiaddr)'
          example: /ip4/7.7.7.7/tcp/4242/p2p/QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N
        state:
          type: string
          enum:
            - disconnected
            - connecting
            - connected
            - disconnecting
        direction:
          type: string
          enum:
            - inbound
            - outbound
    PeerId:
      type: string
      description: 'Cryptographic hash of a peer’s public key. [Read more](https://docs.libp2p.io/concepts/peer-id/)'
      example: QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N
    GenesisTime:
      allOf:
        - type: string
          example: '1'
        - example: '1590832934'
        - description: 'The genesis_time configured for the beacon node, which is the unix time in seconds at which the Eth2.0 chain began.'
    Version:
      type: string
      description: 'A string which uniquely identifies the client implementation and its version; similar to [HTTP User-Agent](https://tools.ietf.org/html/rfc7231#section-5.5.3).'
      example: Lighthouse / v0.1.5 (Linux x86_64)
    ForkVersion:
      type: string
      description: a fork version number
      example: '0x00000000'
      pattern: '^0x[a-fA-F0-9]{8}$'
    Root:
      type: string
      format: hex
      example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
      pattern: '^0x[a-fA-F0-9]{64}$'
    Hex:
      type: string
      format: hex
      example: '0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2'
      pattern: '^0x[a-fA-F0-9]{64}$'
    Signature:
      type: string
      format: bytes
      pattern: '^0x[a-fA-F0-9]{192}$'
      example: '0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505'
  parameters:
    StateId:
      name: state_id
      in: path
      required: true
      example: head
      schema:
        type: string
      description: |
        State identifier.
        Can be one of: "head" (canonical head in node's view), "genesis", "finalized", "justified", \<slot\>, \<hex encoded stateRoot with 0x prefix\>.
    BlockId:
      name: block_id
      in: path
      required: true
      example: head
      schema:
        type: string
      description: |
        Block identifier.
        Can be one of: "head" (canonical head in node's view), "genesis", "finalized", \<slot\>, \<hex encoded blockRoot with 0x prefix\>.
  responses:
    InvalidRequest:
      description: Invalid request syntax.
    InternalError:
      description: Beacon node internal error.
    NotFound:
      description: Not found
    CurrentlySyncing:
      description: 'Beacon node is currently syncing, try again later.'
